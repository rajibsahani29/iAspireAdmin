{"version":3,"sources":["webpack:///./src/app/app.setting.ts","webpack:///./src/app/SurveyEditor/surveyeditor.component.ts","webpack:///./src/app/SurveyForm/surveyform.component.ts","webpack:///./src/app/_directives/surveyEditor.directive.ts","webpack:///./src/app/_models/NSurveyModel.ts","webpack:///./src/app/_models/SurveyJSJsonData.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/nsurvey.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/$_gendir async","webpack:///./src/main.ts","webpack:///./src/app/_directives/SurveyWidget/ck-editor.ts","webpack:///./src/app/_directives/SurveyWidget/signature_pad.ts","webpack:///./src/app/_directives/surveyForm.directive.ts","webpack:///./src/app/_directives/surveyJsEditorSetting.ts","webpack:///./src/app/_models/ActiveUser.ts","webpack:///./src/app/_models/NSurveyXmlData.ts","webpack:///./src/app/app.ErrorHandler.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/SurveyEditor/surveyeditor.component.css","webpack:///./src/app/SurveyEditor/surveyeditor.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Inject } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nexport class AppSettings {\r\n    //private static API_HOST = environment.ApiUrl;\r\n    //public static API_BASE = environment.ApiUrl + environment.ApiPath;\r\n    //public static WAP_BASE = environment.WapUrl  + environment.WapPath;\r\n\r\n}\r\nexport class UrlConfig {\r\n    public API_BASE:string = \"\";\r\n    public WAP_BASE:string = \"\";\r\n    \r\n    constructor(@Inject(Window) private _window: Window)\r\n    {\r\n        this.API_BASE = this._window.location.protocol + \"//\" + environment.ApiUrl + environment.ApiPath;\r\n        this.WAP_BASE = this._window.location.protocol + \"//\"+ environment.WapUrl  + environment.WapPath;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.setting.ts","import { Component, OnInit, ViewEncapsulation, Inject, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { NSurveyService } from '../_services/nsurvey.service'\r\nimport { NSurveyLogic, NQuestion, NAnswer, NInfo, NMatrixColumn, NMatrixRow, NSurveyDetails } from '../_models/NSurveyModel';\r\nimport { NSurveyXmlData } from '../_models/NSurveyXmlData'\r\nimport { SurveyJSData, IMatrixColumn, IMatrixRow } from '../_models/SurveyJSJsonData'\r\nimport { forEach } from '@angular/router/src/utils/collection';\r\nimport { jsonpFactory } from '@angular/http/src/http_module';\r\nimport { DOCUMENT } from '@angular/platform-browser';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { promise } from 'selenium-webdriver';\r\n//import { SurveyEditor } from 'surveyjs-editor';\r\nimport { SurveyEditorDirectiveComponent } from '../_directives/surveyEditor.directive';\r\nimport { Survey } from 'survey-knockout';\r\nimport { UrlConfig } from '../app.setting';\r\n\r\n//import { NotificationsService } from 'angular2-notifications';\r\n\r\nlet urlSetting: UrlConfig = new UrlConfig(window);\r\n@Component({\r\n  selector: 'SurveyJs',\r\n  templateUrl: 'surveyeditor.component.html',\r\n  styleUrls: ['surveyeditor.component.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [NSurveyService]\r\n})\r\nexport class SurveyEditorComponent implements OnInit {\r\n  @ViewChild(SurveyEditorDirectiveComponent) surveyRef: SurveyEditorDirectiveComponent;\r\n  surveyID: number;\r\n  surveyTitle: string;\r\n  LanguageCode: string;\r\n  surveyData: SurveyJSData = new SurveyJSData();\r\n  json: any;\r\n  SurveyGuid: string;\r\n  backUrl: string;\r\n  isLoading: boolean = false;\r\n\r\n  public options = {\r\n    position: [\"bottom\", \"left\"],\r\n    timeOut: 5000,\r\n    lastOnBottom: true\r\n  }\r\n\r\n  lstLayoutCSS: any[] = [{ text: '-1', value: '-Select-', selected: true }];\r\n  LayoutFormData: any = this.getDefaultLayoutFormData();\r\n  UploadFileContent: FormData;\r\n \r\n  @ViewChild('fuUploadCSS') selectedFile: any;\r\n  \r\n  //private _notificationsService: NotificationsService, \r\n  constructor(@Inject(DOCUMENT) private document: any, private activatedRoute: ActivatedRoute, private surveyService: NSurveyService) {\r\n    let tempUrl: string = document.location.href;\r\n    tempUrl = tempUrl.replace('Survey/', '');\r\n    this.backUrl = tempUrl.substr(0, tempUrl.indexOf('editor/')) + \"form\";\r\n    console.log(\"backUrl\", this.backUrl);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.params.subscribe((params: Params) => {\r\n      this.surveyID = params['surveyID'];\r\n    });\r\n\r\n    this.getSurveyXml(this.surveyID);\r\n\r\n    // this.getLanguageDetails().then(\r\n    //   (data) => { console.log(data); },\r\n    //   (err) => { console.log(err); }\r\n    // );\r\n\r\n  }\r\n  getDefaultLayoutFormData() {\r\n    this.UploadFileContent = null;\r\n    return {\r\n      LayoutCss: \"-1\",\r\n      EditCss: '',\r\n      HeaderTemplate:'',\r\n      FooterTemplate:'',\r\n      \r\n      isEditCss: false,\r\n      ErrorMessage :'',\r\n      ErrorMessageUpload:'',\r\n      SuccessMessage:'',\r\n      SuccessUploadMessage:'',\r\n\r\n    };\r\n  }\r\n  resetDefaultLayoutFormData() {\r\n    this.UploadFileContent = null;\r\n    this.selectedFile.nativeElement.value = \"\";\r\n    if(this.LayoutFormData)\r\n    {\r\n      this.LayoutFormData.EditCss = '';\r\n      this.LayoutFormData.isEditCss= false;\r\n      this.LayoutFormData.ErrorMessage ='';\r\n      this.LayoutFormData.ErrorMessageUpload = '';\r\n\r\n      this.LayoutFormData.SuccessMessage = '';\r\n      this.LayoutFormData.SuccessUploadMessage = '';\r\n    }\r\n  }\r\n\r\n  getSurveyXml(SurveyID: number) {\r\n    this.isLoading = true;\r\n    let nSurveyJson = new NSurveyXmlData();\r\n    this.surveyService.getSurveyXml(SurveyID).then(\r\n      (xmlData) => {\r\n        if (xmlData != undefined) {\r\n          this.getSurveyDetails(nSurveyJson, xmlData);\r\n        }\r\n        else {\r\n          alert(\"No Data Found\");\r\n        }\r\n      },\r\n      (err) => {\r\n        this.isLoading = false;\r\n        this.showError(err);\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  getSurveyDetails(nSurveyJson: any, xmlData: any) {\r\n    this.surveyService.getSurveyDetails(this.surveyID).then(\r\n      (data) => {\r\n        this.isLoading = false;\r\n        console.log(data.json());\r\n        this.SurveyGuid = data.json();\r\n        let strSurveyGuid: string = data.json();\r\n\r\n        nSurveyJson.loadData(xmlData);\r\n        if (!nSurveyJson.survey) {\r\n          nSurveyJson.survey = {} as any;\r\n        }\r\n        else if (!nSurveyJson.survey.question) {\r\n          nSurveyJson.survey.question = [];\r\n        }\r\n\r\n        nSurveyJson.survey.question.sort(function (a, b) { return Number(a._DisplayOrder) - Number(b._DisplayOrder) });\r\n        nSurveyJson.survey.SurveyID = this.surveyID;\r\n\r\n        this.surveyData.loadNSurvey(nSurveyJson);\r\n        this.surveyData.SurveyJson.SurveyGUID = strSurveyGuid;\r\n        this.json = this.surveyData.SurveyJson;\r\n        this.surveyTitle = nSurveyJson.survey.Title;\r\n\r\n        console.log(\"nSurveyJson\", nSurveyJson);\r\n        console.log(\"SurveyJson\", this.surveyData);\r\n      },\r\n      (err) => {\r\n        this.isLoading = false;\r\n        this.showError(err);\r\n      });\r\n  }\r\n\r\n  questionAdded(question) {\r\n    console.log(\"Add Question\", question);\r\n    let objQuestion: NQuestion = question.nquestion;\r\n    objQuestion.SurveyID = this.surveyID;\r\n    console.log(\"objQuestion\", objQuestion);\r\n    //if (objQuestion.Answer.length > 0 || objQuestion.SelectionModeId > 0) \r\n    {\r\n      this.isLoading = true;\r\n      this.surveyService.createQuestion(objQuestion).then(\r\n        (data) => {\r\n          this.isLoading = false;\r\n          if (data.status == 200) {\r\n            this.updateReturnValueAfterAddEdit(question, data)\r\n          }\r\n          else {\r\n            alert(\"Error adding new question\");\r\n          }\r\n        },\r\n        (err) => {\r\n          this.isLoading = false;\r\n          this.showError(err);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  questionModified(question) {\r\n    console.log(\"Update Question\", question);\r\n    let objQuestion: NQuestion = question.nquestion;\r\n    objQuestion.SurveyID = this.surveyID;\r\n\r\n    //if (objQuestion.Answer.length > 0 || objQuestion.SelectionModeId > 0) \r\n    {\r\n      this.isLoading = true;\r\n      this.surveyService.updateQuestion(objQuestion).then(\r\n        (data) => {\r\n\r\n          this.isLoading = false;\r\n          if (data.status == 200) {\r\n            this.updateReturnValueAfterAddEdit(question, data);\r\n          }\r\n          else {\r\n            alert(\"Error adding new question\");\r\n          }\r\n        },\r\n        (err) => {\r\n          this.showError(err);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  updateReturnValueAfterAddEdit(question, data) {\r\n    var surveyQuestion = question.SurveyElement;\r\n    var retValue: NQuestion = data.json();\r\n\r\n    if (retValue.Answer && retValue.Answer.length > 0) {\r\n      var index = retValue.Answer.length - 1;\r\n      while (index >= 0) {\r\n        if (retValue.Answer[index]._OprationType === 'delete') {\r\n          retValue.Answer.splice(index, 1);\r\n        }\r\n        else {\r\n          retValue.Answer[index]._OprationType = \"\";\r\n        }\r\n        index -= 1;\r\n      }\r\n    }\r\n    if (retValue.Rows && retValue.Rows.length > 0) {\r\n      var index = retValue.Rows.length - 1;\r\n      while (index >= 0) {\r\n        if (retValue.Rows[index]._OprationType === 'delete') {\r\n          retValue.Rows.splice(index, 1);\r\n        }\r\n        else {\r\n          retValue.Rows[index]._OprationType = \"\";\r\n        }\r\n        index -= 1;\r\n      }\r\n      if (retValue.Rows.length == surveyQuestion.rows.length) {\r\n        surveyQuestion.rows.forEach((rw, idx) => {\r\n          rw.rowid = retValue.Rows[idx].RowId;\r\n        });\r\n      }\r\n       \r\n    }\r\n\r\n    if (retValue.Columns && retValue.Columns.length > 0) {\r\n      var index = retValue.Columns.length - 1;\r\n      while (index >= 0) {\r\n        if (retValue.Columns[index]._OprationType === 'delete') {\r\n          retValue.Columns.splice(index, 1);\r\n        }\r\n        else {\r\n          retValue.Columns[index]._OprationType = \"\";\r\n        }\r\n        index -= 1;\r\n      }\r\n      if (retValue.Columns.length == surveyQuestion.columns.length) {\r\n        surveyQuestion.columns.forEach((rw, idx) => {\r\n          rw.columnid = retValue.Columns[idx].ColumnId;\r\n       \r\n        });\r\n      }\r\n    }\r\n    if (question.choices && question.choices.length > 0) {\r\n      // FOR CHOICE TYPE QUESTION\r\n      if (surveyQuestion.choices.length <= retValue.Answer.length) {\r\n        surveyQuestion.choices.forEach((rw, idx) => {\r\n          rw.rowid = retValue.Answer[idx].AnswerId;\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      // FOR OTHER THAN CHOICE IN SINGLE\r\n    }\r\n\r\n\r\n    //question.choices\r\n    question.nquestion.QuestionID = retValue.QuestionID;\r\n    question.nquestion.Answer = retValue.Answer;\r\n    question.nquestion.Rows = retValue.Rows;\r\n    question.nquestion.Columns = retValue.Columns;\r\n\r\n    question.questionid = retValue.QuestionID;\r\n    question.SurveyElement.questionid = retValue.QuestionID;\r\n\r\n    console.log(\"Updated\", question.nquestion);\r\n  }\r\n\r\n\r\n  questionOrderChanged(question) {\r\n    let nQue: NQuestion = question.nquestion;\r\n    console.log(\"nQue\", nQue);\r\n    this.isLoading = true;\r\n    this.surveyService.changeQuestionDisplayOrder(nQue.QuestionID, nQue.DisplayOrder).then(\r\n      (data) => {\r\n        this.isLoading = false;\r\n        //alert(\"Added\" + data);\r\n      },\r\n      (err) => {\r\n        this.isLoading = false;\r\n        this.showError(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  questionDeleted(question) {\r\n    console.log(question);\r\n    let QuestionId: number = question.questionid ? question.questionid : 0;\r\n    if (QuestionId > 0) {\r\n      this.isLoading = true;\r\n      this.surveyService.deleteQuestion(QuestionId).then(\r\n        (data) => {\r\n          this.isLoading = false;\r\n          ///alert(\"delete\")\r\n        },\r\n        (err) => {\r\n          this.showError(err);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  surveySaved(survey) {\r\n    this.json = survey;\r\n  }\r\n\r\n\r\n  saveSurveyDetails(surveyDetails:NSurveyDetails)\r\n  {\r\n    if (surveyDetails.SurveyId > 0 && surveyDetails.Title.length > 0) {\r\n      this.isLoading = true;\r\n      this.surveyService.updateSurveyDetails(surveyDetails).then(\r\n        (data) => {\r\n          this.isLoading = false;\r\n          this.surveyTitle = surveyDetails.Title;\r\n        },\r\n        (err) => {\r\n          this.showError(err);\r\n        }\r\n      );\r\n    }\r\n    else\r\n    {\r\n      alert(\"Please enter survey title.\");\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n  LayoutButton_Click(data) {\r\n    //this.LayoutFormData = this.getDefaultLayoutFormData();\r\n    this.resetDefaultLayoutFormData();\r\n    this.getLayoutData();\r\n  }\r\n\r\n  getLayoutData() {\r\n    this.isLoading = true;\r\n    this.surveyService.getSurveyTemplateCSS(this.surveyID, \"\").then(\r\n      (data) => {\r\n        this.isLoading = false;\r\n        var Responce = data.json();\r\n        this.lstLayoutCSS = Responce.lstCSSFiles;\r\n        var item = this.lstLayoutCSS.find(t => t.selected == true);\r\n        if (item) {\r\n          this.LayoutFormData.LayoutCss = item.value;\r\n        }\r\n        $(\"#modalLayout\").modal(\"show\");\r\n      },\r\n      (err) => {\r\n        this.isLoading = false;\r\n        this.showError(err);\r\n      });\r\n  }\r\n\r\n  EditCSS_click() {\r\n\r\n    /*\r\n    this._notificationsService.success(\r\n      'Some Title',\r\n      'Some Content',\r\n      {\r\n          timeOut: 5000,\r\n          showProgressBar: true,\r\n          pauseOnHover: false,\r\n          clickToClose: false,\r\n          maxLength: 10\r\n      }\r\n    )\r\n    */\r\n\r\n    this.resetDefaultLayoutFormData();\r\n    if (this.LayoutFormData.LayoutCss != \"-1\") {\r\n      this.isLoading = true;\r\n      this.surveyService.getCSSContent(this.surveyID, this.LayoutFormData.LayoutCss).then(\r\n        (data) => {\r\n          this.isLoading = false;\r\n          this.LayoutFormData.isEditCss = true;\r\n          this.LayoutFormData.EditCss = data.json().data;\r\n          //console.log(data.json())\r\n        },\r\n        (error) => {\r\n          this.isLoading = false;\r\n          this.LayoutFormData.EditCss = \"\";\r\n          this.showError(error);\r\n        },\r\n      );\r\n    }\r\n    else {\r\n      this.LayoutFormData.EditCss = \"\";\r\n      this.LayoutFormData.ErrorMessage = \"Please select css file.\";\r\n      //alert(\"Please select css file.\");\r\n    }\r\n  }\r\n\r\n  EdirCancel_click(){\r\n    this.resetDefaultLayoutFormData();\r\n  }\r\n  SaveEditCSS_click()\r\n  {\r\n    if (this.LayoutFormData.LayoutCss != \"-1\") {\r\n      this.isLoading = true;\r\n\r\n      var objSurveyLayout = {\r\n        SurveyId: this.surveyID,\r\n        SelectedFile: this.LayoutFormData.LayoutCss,\r\n        FileContent  : this.LayoutFormData.EditCss,\r\n        \r\n      };\r\n      this.surveyService.saveSurveyCSS(objSurveyLayout).then(\r\n        (data) => {\r\n          this.isLoading = false;\r\n          this.resetDefaultLayoutFormData();\r\n          this.LayoutFormData.SuccessMessage = \"Save Success.!\";\r\n        },\r\n        (error) => {\r\n          this.isLoading = false;\r\n          this.LayoutFormData.EditCss = \"\";\r\n          this.LayoutFormData.ErrorMessage = \"Something went wrong, Please try again !\";\r\n          this.showError(error);\r\n        },\r\n      );\r\n    }\r\n    else {\r\n      this.LayoutFormData.EditCss = \"\";\r\n      this.LayoutFormData.ErrorMessage = \"No file selected for update.\";\r\n      //alert(\"Please select css file.\");\r\n    }\r\n  }\r\n\r\n  DeleteCSS_click() {\r\n    if(confirm(\"Are you sure want to delete ?\")) \r\n    {\r\n      //this.resetDefaultLayoutFormData();\r\n      if (this.LayoutFormData.LayoutCss != \"-1\") {\r\n        this.isLoading = true;\r\n        this.surveyService.deleteSurveyCSS(this.surveyID, this.LayoutFormData.LayoutCss).then(\r\n          (data) => {\r\n            //this.LayoutFormData = this.getDefaultLayoutFormData();\r\n            this.resetDefaultLayoutFormData();\r\n            this.getLayoutData();\r\n            this.LayoutFormData.SuccessMessage = \"Delete Success.!\";\r\n          },\r\n          (error) => {\r\n            this.isLoading = false;\r\n            this.showError(error);\r\n          },\r\n        );\r\n      }\r\n      else {\r\n        this.LayoutFormData.EditCss = \"\";\r\n        this.LayoutFormData.ErrorMessage = \"Please select css file.\";\r\n        //alert(\"Please select css file.\");\r\n      }\r\n    }\r\n  }\r\n\r\n  DownloadCSS_click() {\r\n    this.resetDefaultLayoutFormData();\r\n    if (this.LayoutFormData.LayoutCss != \"-1\") {\r\n      this.isLoading = true;\r\n      this.surveyService.getCSSContent(this.surveyID, this.LayoutFormData.LayoutCss).then(\r\n        (data) => {\r\n          this.isLoading = false;\r\n          this.downloadFile(data.json().data, this.LayoutFormData.LayoutCss);\r\n        },\r\n        (error) => {\r\n          this.isLoading = false;\r\n          this.showError(error);\r\n        },\r\n      );\r\n    }\r\n    else {\r\n      this.LayoutFormData.EditCss = \"\";\r\n      this.LayoutFormData.ErrorMessage = \"Please select css file.\";\r\n      //alert(\"Please select css file.\");\r\n    }\r\n  }\r\n  downloadFile(data: Response, fileName: string) {\r\n    var a = document.createElement(\"a\");\r\n    var blob = new Blob([data], { type: \"octet/stream\" }),\r\n      url = window.URL.createObjectURL(blob);\r\n\r\n    a.href = url;\r\n    a.download = fileName;\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n    /*\r\n    var blob = new Blob([data], { type: 'text/csv' });\r\n    var url= window.URL.createObjectURL(blob);\r\n    window.open(url);\r\n    */\r\n  }\r\n\r\n\r\n  onChangeCSS(e) {\r\n    this.resetDefaultLayoutFormData();\r\n  }\r\n\r\n  SaveLayout_click() {\r\n     \r\n    this.LayoutFormData.EditCss = '';\r\n    this.LayoutFormData.isEditCss = false;\r\n \r\n      this.isLoading = true;\r\n\r\n      var objSurveyLayout = {\r\n        SurveyId: this.surveyID,\r\n        SelectedFile: this.LayoutFormData.LayoutCss,\r\n        HeaderTemplate:this.LayoutFormData.HeaderTemplate,\r\n        FooterTemplate:'',\r\n\r\n      };\r\n      this.surveyService.saveSurveyLayout(objSurveyLayout).then(\r\n        (data) => {\r\n          this.isLoading = false;\r\n          this.resetDefaultLayoutFormData();\r\n          this.LayoutFormData.SuccessMessage = \"Save Success.!\";\r\n        },\r\n        (error) => {\r\n          this.isLoading = false;\r\n          this.LayoutFormData.EditCss = \"\";\r\n          this.LayoutFormData.ErrorMessage = \"Something went wrong, Please try again !\";\r\n          this.showError(error);\r\n        },\r\n      );\r\n    \r\n  }\r\n\r\n  Upload_click() {\r\n    this.isLoading = true;\r\n    if (this.UploadFileContent && this.UploadFileContent.has(\"uploadFile\")) {\r\n      this.UploadFileContent.append('SurveyId', this.surveyID.toString());\r\n\r\n      this.surveyService.uploadSurveyCSS(this.UploadFileContent).then(\r\n        (data) => {\r\n          //this.LayoutFormData = this.getDefaultLayoutFormData();\r\n          this.getLayoutData();\r\n          this.resetDefaultLayoutFormData();\r\n          this.LayoutFormData.SuccessUploadMessage = \"File Upload Success.!\";\r\n        },\r\n        (err) => {\r\n          this.isLoading = false;\r\n          //this.showError(err); \r\n        },\r\n      )\r\n    }\r\n  }\r\n\r\n  fileChange(event) {\r\n    this.UploadFileContent = new FormData();\r\n    let fileList: FileList = event.target.files;\r\n    if (fileList.length > 0) {\r\n      let file: File = fileList[0];\r\n      this.UploadFileContent.append('uploadFile', file, file.name);\r\n      let headers = new Headers();\r\n    }\r\n  }\r\n\r\n  // getLanguageDetails() {\r\n  //   const promise = new Promise((resolve, reject) => {\r\n  //     this.surveyService.getLanguageList(this.surveyID).subscribe(\r\n  //       data => {\r\n  //         resolve(data);\r\n  //       },\r\n  //       error => {\r\n  //         reject(error);\r\n  //       }\r\n  //     )\r\n  //   })\r\n  //   return promise;\r\n  // }\r\n\r\n  showError(error) {\r\n    if (error.ok == false) {\r\n      if (error.status == 0) {\r\n        alert(\"Connection Error\");\r\n      }\r\n      else {\r\n        alert(error.status + \" : \" + error.statusText);\r\n      }\r\n    }\r\n    else {\r\n      throw error;\r\n    }\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/SurveyEditor/surveyeditor.component.ts","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { NSurveyService } from '../_services/nsurvey.service'\r\nimport { NSurveyXmlData } from '../_models/NSurveyXmlData'\r\n \r\n@Component({\r\n  selector: 'survey-form',\r\n  template: '<survey [json]=\"json\"></survey>',\r\n  styleUrls: [],\r\n  providers:[NSurveyService]\r\n})\r\nexport class SurveyFormComponent implements OnInit {\r\n  json = {\r\n    title: 'Product Feedback Survey Example', showProgressBar: 'top', pages: [\r\n      {\r\n        questions: [{\r\n          type: 'matrix',\r\n          name: 'Quality',\r\n          title: 'Please indicate if you agree or disagree with the following statements',\r\n          columns: [{\r\n            value: 1,\r\n            text: 'Strongly Disagree'\r\n          },\r\n          {\r\n            value: 2,\r\n            text: 'Disagree'\r\n          },\r\n          {\r\n            value: 3,\r\n            text: 'Neutral'\r\n          },\r\n          {\r\n            value: 4,\r\n            text: 'Agree'\r\n          },\r\n          {\r\n            value: 5,\r\n            text: 'Strongly Agree'\r\n          }\r\n          ],\r\n          rows: [{\r\n            value: 'affordable',\r\n            text: 'Product is affordable'\r\n          },\r\n          {\r\n            value: 'does what it claims',\r\n            text: 'Product does what it claims'\r\n          },\r\n          {\r\n            value: 'better then others',\r\n            text: 'Product is better than other products on the market'\r\n          },\r\n          {\r\n            value: 'easy to use',\r\n            text: 'Product is easy to use'\r\n          }\r\n          ]\r\n        },\r\n        {\r\n          type: 'rating',\r\n          name: 'satisfaction',\r\n          title: 'How satisfied are you with the Product?',\r\n          mininumRateDescription: 'Not Satisfied',\r\n          maximumRateDescription: 'Completely satisfied'\r\n        },\r\n        {\r\n          type: 'rating',\r\n          name: 'recommend friends',\r\n          visibleIf: '{satisfaction} > 3',\r\n          title: 'How likely are you to recommend the Product to a friend or co-worker?',\r\n          mininumRateDescription: 'Will not recommend',\r\n          maximumRateDescription: 'I will recommend'\r\n        },\r\n        {\r\n          type: 'comment',\r\n          name: 'suggestions',\r\n          title: 'What would make you more satisfied with the Product?',\r\n        }\r\n        ]\r\n      }, {\r\n        questions: [{\r\n          type: 'radiogroup',\r\n          name: 'price to competitors',\r\n          title: 'Compared to our competitors, do you feel the Product is',\r\n          choices: ['Less expensive', 'Priced about the same', 'More expensive', 'Not sure']\r\n        },\r\n        {\r\n          type: 'radiogroup',\r\n          name: 'price',\r\n          title: 'Do you feel our current price is merited by our product?',\r\n          choices: ['correct|Yes, the price is about right',\r\n            'low|No, the price is too low for your product',\r\n            'high|No, the price is too high for your product'\r\n          ]\r\n        },\r\n        {\r\n          type: 'multipletext',\r\n          name: 'pricelimit',\r\n          title: 'What is the... ',\r\n          items: [{\r\n            name: 'mostamount',\r\n            title: 'Most amount you would every pay for a product like ours'\r\n          },\r\n          {\r\n            name: 'leastamount',\r\n            title: 'The least amount you would feel comfortable paying'\r\n          }\r\n          ]\r\n        }\r\n        ]\r\n      }, {\r\n        questions: [{\r\n          type: 'text',\r\n          name: 'email',\r\n          title: 'Thank you for taking our survey. Please enter your email address, then press the \"Submit\" button.'\r\n        }]\r\n      }]\r\n  };\r\n\r\n  constructor(private activatedRoute: ActivatedRoute, private surveyService: NSurveyService) { }\r\n\r\n  ngOnInit() {\r\n    // let nSurveyJson = new NSurveyXmlData();\r\n    // nSurveyJson.loadXml(this.getSurveyXml());\r\n    // console.log(nSurveyJson)\r\n     \r\n  }\r\n  \r\n  getSurveyXml():string\r\n  {\r\n    this.surveyService.getSurveyXml(2132).then(\r\n      data => {\r\n        console.log(data);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    return \"\";\r\n  } \r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/SurveyForm/surveyform.component.ts","import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { SurveyJSEditorSetting } from './surveyJsEditorSetting';\r\nimport * as SurveyEditor from 'surveyjs-editor';\r\nimport * as Surveyko from 'survey-knockout';\r\n//import * as Survey from 'survey-angular';\r\n//import { showdown } from 'showdown';\r\n\r\nimport * as CKWidget from './SurveyWidget/ck-editor';\r\nimport * as SignatureWidget from './SurveyWidget/signature_pad';\r\n\r\nimport { UrlConfig } from '../app.setting';\r\nimport { NSurveyLogic, NQuestion, NAnswer, NInfo, NMatrixColumn, NMatrixRow, NSurveyDetails } from '../_models/NSurveyModel';\r\nimport { xmlControlList, preSurveyQuestionList } from '../_models/SurveyJSJsonData'\r\n//import * as $ from 'jquery';\r\n\r\nconst showdown = require('showdown');\r\n\r\n@Component({\r\n    selector: 'survey-editor',\r\n    template: `<div id=\"surveyEditorContainer\" json></div>`,\r\n})\r\n\r\nexport class SurveyEditorDirectiveComponent implements OnChanges {\r\n    editor: SurveyEditor.SurveyEditor;\r\n    @Input() json: any;\r\n\r\n    @Output() surveySaved: EventEmitter<any> = new EventEmitter();\r\n    @Output() onQuestionRemoved: EventEmitter<any> = new EventEmitter();\r\n    @Output() onQuestionAdded: EventEmitter<any, any> = new EventEmitter();\r\n    @Output() onQuestionModified: EventEmitter<any> = new EventEmitter();\r\n    @Output() onQuestionChangeOrder: EventEmitter<any> = new EventEmitter();\r\n    @Output() onLayoutClick: EventEmitter<any> = new EventEmitter();\r\n    @Output() onSaveSurveyDetails: EventEmitter<any> = new EventEmitter();\r\n\r\n\r\n    private strWapBase: string = '';\r\n    private strCurrentOperation = '';\r\n    constructor() {\r\n        let urlSetting: UrlConfig = new UrlConfig(window);\r\n        this.strWapBase = urlSetting.WAP_BASE;\r\n    }\r\n\r\n    isAddModelSubmitting: boolean = false;\r\n    ngOnInit() {\r\n        this.initSurveyEditor();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (this.editor != undefined && this.json) {\r\n            this.editor.text = JSON.stringify(this.json);\r\n            this.editor.saveSurveyFunc = this.doOnSaveSurvey;\r\n            this.editor.onModified.add(this.doOnQuestionModified);\r\n            var self = this;\r\n            this.editor.onElementDeleting.add(function (editor, options) {\r\n                // if(self.isCopiedElementDeleting)\r\n                // {\r\n                //     self.isCopiedElementDeleting = false;\r\n                //     options.allowing = false;\r\n                // }\r\n                // else \r\n                let arrNoBe = ['CANCEL', 'COPY'];\r\n                if (arrNoBe.indexOf(self.strCurrentOperation) == -1) {\r\n                    if (!window.confirm(\"Are you sure want to delete the question?\")) {\r\n                        options.allowing = false;\r\n                    }\r\n                }\r\n                // else\r\n                // {\r\n                //     self.strCurrentOperation = \"\";\r\n                // }\r\n            });\r\n            this.editor.onElementDoubleClick.add(function (editor, options) {\r\n                editor.showElementEditor(options.element, function (isCanceled) {\r\n                    //if (isCanceled) editor.deleteElement(options.element);\r\n                });\r\n            });\r\n            this.setSurveyToolbar();\r\n        }\r\n    }\r\n\r\n    initSurveyEditor(): void {\r\n        //Initilize Widgets\r\n        CKWidget.initCkEditor(Surveyko);\r\n        SignatureWidget.initSignaturePad(Surveyko);\r\n\r\n        this.setSurveyEditorCustomSetting();\r\n        let editorOptions =\r\n            {\r\n                showEmbededSurveyTab: SurveyJSEditorSetting.showEmbededSurveyTab,\r\n                showJSONEditorTab: SurveyJSEditorSetting.showJSONEditorTab,\r\n                showTestSurveyTab: SurveyJSEditorSetting.showTestSurveyTab,\r\n                generateValidJSON: SurveyJSEditorSetting.generateValidJSON,\r\n                showPropertyGrid: SurveyJSEditorSetting.showPropertyGrid,\r\n                showOptions: SurveyJSEditorSetting.showOptions,\r\n                questionTypes: SurveyJSEditorSetting.questionTypes,\r\n                //designerHeight        : \"75vh\"\r\n                designerHeight: \"73vh\",\r\n            };\r\n\r\n        this.editor = new SurveyEditor.SurveyEditor('surveyEditorContainer', editorOptions);\r\n        this.editor.haveCommercialLicense = true;\r\n        this.editor.showApplyButtonInEditors = SurveyJSEditorSetting.showApplyButtonInEditors;\r\n        this.editor.onElementAllowOperations.add(function (editor, options) {\r\n            options.allowEdit = true; //default value - allow show Editor question/panel/page\r\n            options.allowDelete = true; //remove delete menu item\r\n            options.allowCopy = true; //remove Copy menu item\r\n            options.allowAddToToolbox = false; // remove add to toolbox menu item\r\n            options.allowDragging = true; //default allow drag this question/page\r\n            options.allowChangeType = true; //do not allow to convert question from one question to another\r\n            options.allowShowHideTitle = false;\r\n            options.allowChangeRequired = false;\r\n        });\r\n        \r\n\r\n        this.editor.onCanShowProperty.add(function (sender, options) {\r\n            if (options.obj.getType() == \"page\") {\r\n                options.canShow = false;\r\n            }\r\n            else if (options.obj.getType() == \"survey\") {\r\n                //var allProperyList = ['clearInvisibleValues','completeText','completedBeforeHtml','completedHtml','cookieName','firstPageIsStarted','focusFirstQuestionAutomatic','goNextPageAutomatic','isSinglePage','loadingHtml','locale','maxTimeToFinish','maxTimeToFinishPage','mode','pageNextText','pagePrevText','questionErrorLocation','questionStartIndex','questionTitleLocation','questionTitleTemplate','questionsOrder','requiredText','sendResultOnPageNext','showCompletedPage','showNavigationButtons','showPageNumbers','showPageTitles','showPrevButton','showProgressBar','showQuestionNumbers','showTimerPanel','showTimerPanelMode','showTitle','startSurveyText','storeOthersAsComment','title','triggers'];\r\n                //console.log(options.obj);\r\n                var arrDisplayProp = ['title', 'showQuestionNumbers', 'isActive'];\r\n                if (arrDisplayProp.indexOf(options.property.name) > -1) {\r\n                    options.canShow = true;\r\n                }\r\n                else {\r\n                    options.canShow = false;\r\n                }\r\n            }\r\n            //console.log(options.property.name);\r\n        });\r\n\r\n\r\n\r\n\r\n        //Create showdown mardown converter\r\n        var converter = new showdown.Converter();\r\n        function doMarkdown(survey, options) {\r\n            //convert the mardown text to html\r\n            var str = converter.makeHtml(options.text);\r\n            if (str.startsWith(\"<p>\") && str.endsWith(\"</p>\")) {\r\n                //remove root paragraphs <p></p>\r\n                str = str.substring(3);\r\n                str = str.substring(0, str.length - 4);\r\n            }\r\n            options.html = str;\r\n        }\r\n\r\n        this.editor.onDesignerSurveyCreated.add(function (editor, options) {\r\n            options.survey.onTextMarkdown.add(doMarkdown);\r\n            options.survey.onGetQuestionTitle.add(function (survey, options) {\r\n                if (options.question.title == options.question.name) options.title = \"\";\r\n            });\r\n        });\r\n        this.editor.onSetPropertyEditorOptions.add(function (sender, options) {\r\n            options.editorOptions.itemsEntryType = \"fast\";\r\n        });\r\n\r\n        /*\r\n        this.editor.onDefineElementMenuItems.add(function(editor, options) {\r\n            //options.items.unshift({text: \"Add Into Shared Repository\", onClick: function(obj){ }});\r\n            options.items.splice(options.items.findIndex(t=>t.name==\"addToToolbox\"),1);\r\n        });\r\n        */\r\n        this.initilizeCustomControls();\r\n    }\r\n\r\n    setSurveyEditorCustomSetting() {\r\n        \r\n        Surveyko.defaultBootstrapCss.navigationButton = \"btn btn-primary\";\r\n        SurveyEditor.removeAdorners([\"controlLabel\", \"item\", \"title\", \"label\", \"itemText\", \"itemTitle\"]);\r\n        \r\n        Surveyko.JsonObject.metaData.findProperty(\"questionbase\", \"name\").readOnly = true;\r\n        Surveyko.JsonObject.metaData.addProperty(\"questionbase\", { name: \"questionid:number\", default: 0 });\r\n        Surveyko.JsonObject.metaData.addProperty(\"questionbase\", { name: \"customcontrol:boolean\", default: false });\r\n        Surveyko.JsonObject.metaData.addProperty(\"questionbase\", { name: \"answertypeid:number\", default: 0 });\r\n        Surveyko.JsonObject.metaData.addProperty(\"questionbase\", { name: \"questiontype:string\" });\r\n        Surveyko.JsonObject.metaData.addProperty(\"questionbase\", { name: \"nquestion:NQuestion\", default: {} });\r\n        //Surveyko.JsonObject.metaData.addProperty(\"questionbase\", { name: \"iscommentineditor:boolean\", default: false });\r\n        //SurveyEditor.defaultStrings.pe[\"iscommentineditor\"] = \"Show As Editor\";\r\n        SurveyEditor.defaultStrings.pe[\"startWithNewLine\"] = \"Start Question with New Line\";\r\n        // remove visibleIf tab for all questions\r\n        \r\n        SurveyEditor.SurveyQuestionEditorDefinition.definition[\"questionbase\"].tabs = [];\r\n        SurveyEditor.SurveyQuestionEditorDefinition.definition[\"questionbase\"].properties = [\r\n            \"title\",\r\n            \"html\",\r\n            //\"defaultValue\",\r\n            //\"placeHolder\",\r\n            \"commentText\",\r\n            { name: \"isRequired\" },\r\n            \"startWithNewLine\",\r\n            \"iscommentineditor\"\r\n        ];\r\n        \r\n        SurveyEditor.SurveyQuestionEditorDefinition.definition.selectbase.tabs = [{ name: \"general\" }, { name: \"choices\", index: 10 }];\r\n        SurveyEditor.SurveyQuestionEditorDefinition.definition[\"selectbase\"].properties = [\r\n            { name: \"hasOther\", tab: \"choices\" },\r\n            { name: \"otherText\", tab: \"choices\" },\r\n            { name: \"colCount\", tab: \"choices\" },\r\n        ];\r\n\r\n        Surveyko.JsonObject.metaData.addProperty(\"survey\", { name: \"isActive:boolean\", default: false });\r\n        Surveyko.JsonObject.metaData.addProperty(\"survey\", { name: \"surveyid:number\", default: 0 });\r\n        Surveyko.JsonObject.metaData.findProperty(\"survey\", \"title\").type = \"string\";\r\n        Surveyko.JsonObject.metaData.findProperty(\"survey\", \"showQuestionNumbers\").setChoices([\"on\", \"off\"], undefined);\r\n        \r\n        SurveyEditor.SurveyQuestionEditorDefinition.definition[\"survey\"].properties = [\r\n            \"title\",\r\n            \"showQuestionNumbers\",\r\n            \"isActive\"\r\n        ];\r\n        \r\n        Surveyko.JsonObject.metaData.addProperty(\"ItemValue\", { name: \"rowid:number\", default: -1 });\r\n        \r\n        //Surveyko.JsonObject.metaData.findProperty(\"itemvalue\", \"value\").visible = false;\r\n        //Surveyko.JsonObject.metaData.findProperty(\"itemvalue\", \"value\").isRequired = false;\r\n\r\n        Surveyko.JsonObject.metaData.addProperty(\"panel\", { name: \"questionid:number\", default: 0 });\r\n\r\n        Surveyko.JsonObject.metaData.addProperty(\"matrixdropdowncolumn\", { name: \"columnid:number\", default: -1 });\r\n        //Surveyko.JsonObject.metaData.findProperty(\"matrixdropdowncolumn\",\"name\").visible = false;\r\n \r\n        SurveyEditor.SurveyQuestionEditorDefinition.definition[\"html\"].tabs = [];\r\n        \r\n        /* UNCOMMENT After New Release\r\n        SurveyEditor.SurveyQuestionEditorDefinition.definition.html = {\r\n            tabs: [{ name: \"general\", visible: false }, { name: \"html\", index: 10 }]\r\n        }\r\n        */\r\n    }\r\n\r\n    setSurveyToolbar() {\r\n        if (this.editor != undefined) {\r\n            var edt = this.editor;\r\n            var DefaultToolbar = this.editor.toolbarItems().map(a => a.id);// [\"svd-survey-settings\",\"svd-redo\",\"svd-options\",\"svd-test\",\"svd-save\",\"svd_state\"]\r\n            $(DefaultToolbar).each(function() {\r\n                var exceptHide = [\"svd-survey-settings\"];\r\n                if(exceptHide.indexOf(this+\"\") == -1)\r\n                {\r\n                    var index = edt.toolbarItems().findIndex(t=> t.id == this+\"\" );\r\n                    edt.toolbarItems().splice(index,1);\r\n                }\r\n            });\r\n            \r\n            if (this.editor.toolbarItems().findIndex(t => t.id == 'custom-preview') == -1) {\r\n                var strWapURL = this.strWapBase;\r\n                var SurveyGuid = this.json.SurveyGUID;\r\n                this.editor.toolbarItems.push({\r\n                    id: \"custom-preview\",\r\n                    visible: true,\r\n                    title: \"Survey Preview\",\r\n                    action: function () {\r\n                        window.open(strWapURL + \"surveymobile.aspx?surveyid=\" + SurveyGuid, \"_blank\");\r\n                    }\r\n                });\r\n            }\r\n            if (this.editor.toolbarItems().findIndex(t => t.id == 'custom-layout') == -1) {\r\n                var LayoutEvent = this.onLayoutClick;\r\n                this.editor.toolbarItems.push({\r\n                    id: \"custom-layout\",\r\n                    visible: true,\r\n                    title: \"Layout\",\r\n                    action: function () {\r\n                        LayoutEvent.emit(\"\");\r\n                    }\r\n                });\r\n            }\r\n            // this.editor.toolbarItems.remove(function (item) {\r\n            //     return (item.title == \"Undo\" || item.title == \"Redo\" || item.title == \"Save Survey\");\r\n            // });\r\n        }\r\n    }\r\n\r\n    initilizeCustomControls() {\r\n        let toolCurrentDateTime: SurveyEditor.IQuestionToolboxItem = {} as any;\r\n        Object.assign(toolCurrentDateTime, {\r\n            name: \"datetime\", isCopied: false, iconName: \"icon-text\", title: 'Date & Time',\r\n            json: {\r\n                type: \"text\",\r\n                inputType:\"datetime\",\r\n                name: \"datetime\",\r\n                title: \"Date & Time\",\r\n            }\r\n        });\r\n        this.editor.toolbox.addItem(toolCurrentDateTime);\r\n\r\n\r\n        let toolPhoto: SurveyEditor.IQuestionToolboxItem = {} as any;\r\n        Object.assign(toolPhoto, {\r\n            name: \"photo\", isCopied: false, iconName: \"icon-file\", title: 'Photo',\r\n            json: {\r\n                type: \"file\",\r\n                name: \"photo\",\r\n                title: \"Photo:\"\r\n            }\r\n        });\r\n        this.editor.toolbox.addItem(toolPhoto);\r\n\r\n        let toolVideo: SurveyEditor.IQuestionToolboxItem = {} as any;\r\n        Object.assign(toolVideo, {\r\n            name: \"video\", isCopied: false, iconName: \"icon-file\", title: 'Video',\r\n            json: {\r\n                type: \"file\",\r\n                name: \"video\",\r\n                title: \"Video:\"\r\n            }\r\n        });\r\n        this.editor.toolbox.addItem(toolVideo);\r\n\r\n        let toolVoice: SurveyEditor.IQuestionToolboxItem = {} as any;\r\n        Object.assign(toolVoice, {\r\n            name: \"voice\", isCopied: false, iconName: \"icon-file\", title: 'Voice',\r\n            json: {\r\n                type: \"file\",\r\n                name: \"voice\",\r\n                title: \"Voice:\"\r\n            }\r\n        });\r\n        this.editor.toolbox.addItem(toolVoice);\r\n\r\n\r\n\r\n        let toolSection: SurveyEditor.IQuestionToolboxItem = {} as any;\r\n        Object.assign(toolSection, {\r\n            name: \"section\", isCopied: false, iconName: \"icon-html\", title: 'Section',\r\n            json: {\r\n                type: \"html\",\r\n                name: \"section\",\r\n                html: \"<div style=\\\"width: 100%; background-color: #00A8C6; border-radius: 5px; padding: 0px 10px; color: white;\\\">\\n<p style=\\\"text-align:center\\\"><span style=\\\"font-size:16px\\\">Text</span></p>\\n</div>\\n\"\r\n            }\r\n        });\r\n        this.editor.toolbox.addItem(toolSection);\r\n\r\n        let toolObserverOnlyComment: SurveyEditor.IQuestionToolboxItem = {} as any;\r\n        Object.assign(toolObserverOnlyComment, {\r\n            name: \"ObserverOnlyComment\", isCopied: false, iconName: \"icon-comment\", title: 'Observer Only Comment',\r\n            json: {\r\n                type: \"comment\",\r\n                name: \"ObserverOnlyComment1\",\r\n                title: \"<div class=\\\"nostyle clsNCRemoveExceptGlobalAdminObserver\\\"><strong>Coaches Only Comments</strong></div>\"\r\n            }\r\n        });\r\n        this.editor.toolbox.addItem(toolObserverOnlyComment);\r\n\r\n        if (SurveyJSEditorSetting.showPreSurveyQuestion) {\r\n            preSurveyQuestionList.forEach(element => {\r\n                let item: SurveyEditor.IQuestionToolboxItem = {} as any;\r\n                Object.assign(item, {\r\n                    name: element.name, isCopied: false, iconName: \"icon-expression\", title: element.title,\r\n                    json: {\r\n                        \"type\": element.type,\r\n                        \"placeHolder\": element.placeHolder,\r\n                        \"title\": element.title,\r\n                    }\r\n                });\r\n\r\n                this.editor.toolbox.addItem(item);\r\n            });\r\n        }\r\n\r\n        if (SurveyJSEditorSetting.showXMLCustomQuestion) {\r\n            xmlControlList.forEach(element => {\r\n                let item: SurveyEditor.IQuestionToolboxItem = {} as any;\r\n                Object.assign(item, {\r\n                    name: element.name, isCopied: false, iconName: \"icon-dropdown\", title: element.title,\r\n                    json: {\r\n                        \"type\": \"dropdown\",\r\n                        \"choicesByUrl\": {\r\n                            \"url\": this.strWapBase + \"XmlData/\" + element.xmlFile,\r\n                            \"path\": \"NSurveyDataSource;XmlDataSource;XmlAnswers;XmlAnswer\",\r\n                            \"valueName\": \"AnswerValue\",\r\n                            \"titleName\": \"AnswerDescription\"\r\n                        },\r\n                        \"name\": element.name,\r\n                        \"customcontrol\": true,\r\n                        //\"title\": element.title,\r\n                        \"answertypeid\": element.AnswerTypeId,\r\n                        \"questiontype\": element.name.toLowerCase(),\r\n                    }\r\n                });\r\n                this.editor.toolbox.addItem(item);\r\n            });\r\n        }\r\n    }\r\n\r\n    SetDefaultsForControls(question: any) {\r\n        question.nquestion = {};\r\n        if (question.getType() == 'checkbox' || question.getType() == 'radiogroup' || question.getType() == 'dropdown') {\r\n            if (question.choices && question.choices.length > 0) {\r\n                //var obj = question.choices.shift();\r\n                question.choices = [];\r\n                //question.choices.push(obj);\r\n            }\r\n        }\r\n        else if (question.getType() == 'matrixdropdown') {\r\n            question.choices = [];\r\n            question.columns = [];\r\n            question.rows = [];\r\n            question.cellType = \"text\";\r\n        }\r\n    }\r\n    doOnQuestionModified = (editor, options) => {\r\n        this.strCurrentOperation = \"\";\r\n        //console.log(\"options\", options);\r\n        var element = null;\r\n        var parentElement = null;\r\n        var actionType = '';\r\n\r\n        //if (options.type == \"ADDED_FROM_TOOLBOX\" || options.type == \"ELEMENT_COPIED\") {\r\n\r\n        if (options.type == \"ADDED_FROM_TOOLBOX\") {\r\n            element = options.question;\r\n            parentElement = options.question.parent;\r\n            actionType = \"ADD\";\r\n        }\r\n        else if (options.type == \"DO_DROP\" && options.newElement) {\r\n            element = options.newElement;\r\n            parentElement = options.newElement.parent;\r\n            actionType = \"ADD\";\r\n        }\r\n        else if (options.type == \"ELEMENT_COPIED\") {\r\n            element = options.question;\r\n            parentElement = options.question.parent;\r\n            actionType = \"COPY\";\r\n        }\r\n        else if (options.type == \"DO_DROP\" && !options.newElement) {\r\n            //alert(options.moveToIndex);\r\n            parentElement = options.moveToParent;\r\n            element = options.target;\r\n            actionType = \"REORDER\";\r\n        }\r\n        else if (options.type == \"OBJECT_DELETED\" && !options.newElement) {\r\n            element = options.target;\r\n            parentElement = options.target.parent;\r\n            actionType = \"DELETE\";\r\n        }\r\n        else if (options.type == \"QUESTION_CHANGED_BY_EDITOR\") {\r\n            element = options.question;\r\n            parentElement = options.question.parent;\r\n            actionType = \"MODIFY\";\r\n        }\r\n        else if (options.type == \"QUESTION_CONVERTED\") {\r\n            console.log(\"options\", options);\r\n            element = options.newValue;\r\n            parentElement = options.newValue.parent;\r\n            actionType = \"QUESTION_CONVERTED\";\r\n        }\r\n        console.log(actionType, element);\r\n\r\n        if (actionType == \"ADD\") {\r\n            this.isAddModelSubmitting = true;\r\n            /*\r\n            if (options.type == \"ELEMENT_COPIED\") {\r\n                element.title = element.title + \" - Cloned\";\r\n                element.nquestion.QuestionID = 0;\r\n            }\r\n            else {\r\n                this.SetDefaultsForControls(element);\r\n            }\r\n            */\r\n            this.SetDefaultsForControls(element);\r\n\r\n            var self = this;\r\n            editor.showElementEditor(element, function (isCanceled) {\r\n                if (isCanceled) {\r\n                    if (options.type == \"ELEMENT_COPIED\") {\r\n                        self.strCurrentOperation = 'COPY';\r\n                    }\r\n                    else {\r\n                        self.strCurrentOperation = 'CANCEL';\r\n                    }\r\n                    editor.deleteElement(element)\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        else if (actionType == \"MODIFY\") {\r\n            // For Survey Edit\r\n            if (element.getType() == \"survey\") {\r\n                let surveyDetails: NSurveyDetails = {} as any;\r\n                surveyDetails.Title = element.title;\r\n                surveyDetails.isActive = element.isActive;\r\n                surveyDetails.SurveyId = element.surveyid;\r\n                surveyDetails.QuestionNumberingDisabled = editor.survey.showQuestionNumbers == 'off' ? true : false;\r\n\r\n                this.onSaveSurveyDetails.emit(surveyDetails);\r\n                console.log(element);\r\n            }\r\n            // For All type of Question\r\n            else {\r\n                var json = this.getSurveyQuestionJSON(element, parentElement);\r\n                json.SurveyElement = element;\r\n                if (this.isAddModelSubmitting) {\r\n                    //ADD QUESTION CASE\r\n                    this.isAddModelSubmitting = false;\r\n                    json.nquestion.QuestionID = 0;\r\n                    //json.SurveyQuestion = element;\r\n                    this.onQuestionAdded.emit(json)\r\n                }\r\n                else {\r\n                    //EDIT QUESTION CASE\r\n                    this.onQuestionModified.emit(json);\r\n                    //alert(\"Edit Case\");\r\n                }\r\n            }\r\n\r\n        }\r\n        else if (actionType == \"COPY\") {\r\n            element.title = element.title + \" - Cloned\";\r\n            element.nquestion.QuestionID = 0;\r\n\r\n            var json = this.getSurveyQuestionJSON(element, parentElement);\r\n            json.SurveyElement = element;\r\n            json.nquestion.QuestionID = 0;\r\n            this.onQuestionAdded.emit(json);\r\n        }\r\n        else if (actionType == \"DELETE\") {\r\n            editor.allowing = false;\r\n            console.log(\"element\", element);\r\n            //options.allowing = false;\r\n            //options.allowing = options.elementType !== 'page' && options.element.name === 'page1';\r\n            //alert(\"Delete call\");\r\n            var objConteol = element; //? options.question : options.panel;\r\n            var json = new Surveyko.JsonObject().toJsonObject(element);\r\n            console.log(\"Deleted Question\", json);\r\n            if (json.nquestion.QuestionID > 0) {\r\n                this.onQuestionRemoved.emit(json);\r\n            }\r\n        }\r\n        else if (actionType == \"REORDER\") {\r\n            if (options.moveToIndex != undefined) {\r\n                //var json =  this.getSurveyQuestionJSON(element,parentElement);\r\n                var nDisplayOrder = element.nquestion.DisplayOrder;\r\n                var json = this.getSurveyQuestionJSON(element, parentElement);\r\n                json.nquestion.DisplayOrder = nDisplayOrder;\r\n                if (json.nquestion.DisplayOrder < options.moveToIndex) {\r\n                    json.nquestion.DisplayOrder = options.moveToIndex;\r\n                }\r\n                else {\r\n                    json.nquestion.DisplayOrder = options.moveToIndex + 1;\r\n                }\r\n                this.onQuestionChangeOrder.emit(json);\r\n            }\r\n        }\r\n        else if (actionType = \"QUESTION_CONVERTED\") {\r\n            var newElement = options.newValue;\r\n            var oldElement = options.oldValue;\r\n            var json = this.getConvertedQuestion(oldElement, newElement);\r\n            json.SurveyElement = element\r\n            this.onQuestionModified.emit(json);\r\n        }\r\n    }\r\n    getConvertedQuestion(oldElement: any, newElement: any) {\r\n        var inputType = newElement.getType();\r\n        var inputType1 = inputType == \"checkbox\"?\"radiogroup\":inputType;\r\n        var newAnswerTypeId = new NSurveyLogic().getAnswerTypeIdByType(inputType);\r\n\r\n        var json = new Surveyko.JsonObject().toJsonObject(newElement);\r\n        json.type = newElement.getType()\r\n        json.elementId = newElement.id;\r\n\r\n        json.questiontype = json.questiontype && json.questiontype != \"\" ? json.questiontype : json.type;\r\n        console.log(json.nquestion);\r\n\r\n        if (json.nquestion) {\r\n            json.nquestion.QuestionType = \"single\";\r\n            if (inputType == \"dropdown\") {\r\n                json.nquestion.SelectionModeId = NInfo.SelectionMode.DropDownListSingle;\r\n            }\r\n            else if (inputType == \"matrixdropdown\") {\r\n                json.nquestion.SelectionModeId = NInfo.SelectionMode.MultiMatrix;\r\n                json.nquestion.QuestionType = \"matrix\";\r\n            }\r\n            else if (inputType == \"html\") {\r\n                json.nquestion.SelectionModeId = NInfo.SelectionMode.StaticTextInformation;\r\n            }\r\n            else if (inputType == \"checkbox\") {\r\n                json.nquestion.SelectionModeId = NInfo.SelectionMode.CheckBoxMultiple;\r\n                if (json.nquestion.LayoutModeId == NInfo.LayoutModeId.Horizontal) {\r\n                    json.colCount = json.nquestion.Answer.length;\r\n                    newElement.colCount = json.nquestion.Answer.length;\r\n                }\r\n            }\r\n            else {\r\n                json.nquestion.SelectionModeId = NInfo.SelectionMode.RadioButtonSingle;\r\n                if (json.nquestion.LayoutModeId == NInfo.LayoutModeId.Horizontal) {\r\n                    json.colCount = json.nquestion.Answer.length;\r\n                    newElement.colCount = json.nquestion.Answer.length;\r\n                }\r\n            }\r\n            if (json.nquestion.Answer && json.nquestion.Answer.length > 0) {\r\n                json.nquestion.Answer.forEach(ans => {\r\n                    if(ans.AnswerTypeId != 2 || inputType == \"dropdown\")\r\n                    {\r\n                        ans.AnswerTypeId = newAnswerTypeId;\r\n                    }\r\n                    ans._OprationType = 'edit';\r\n                });\r\n            }\r\n        }\r\n        return json\r\n    }\r\n\r\n\r\n    getSurveyQuestionJSON(element: any, parent: any) {\r\n        var json = new Surveyko.JsonObject().toJsonObject(element);\r\n        json.type = element.getType()\r\n        json.elementId = element.id;\r\n\r\n        json.questiontype = json.questiontype && json.questiontype != \"\" ? json.questiontype : json.type;\r\n        json.nquestion = this.getNQuestionByQuestion(element, parent);\r\n        return json\r\n    }\r\n\r\n\r\n    doOnQuestionRemoved = (sender, options) => {\r\n        sender.allowing = false;\r\n        /*\r\n        console.log(\"type\", options);\r\n        //options.allowing = false;\r\n        //options.allowing = options.elementType !== 'page' && options.element.name === 'page1';\r\n        //alert(\"Delete call\");\r\n        var objConteol = options.element ? options.element : options.panel;\r\n        var json = new Surveyko.JsonObject().toJsonObject(objConteol);\r\n        console.log(\"Deleted Question\", json);\r\n        this.onQuestionRemoved.emit(json);\r\n        */\r\n    }\r\n\r\n    doOnSaveSurvey = () => {\r\n        console.log(JSON.stringify(this.editor.text));\r\n        this.surveySaved.emit(JSON.parse(this.editor.text));\r\n    }\r\n    getNQuestionByQuestion(question: any, parent: any): NQuestion {\r\n        let returnValue: NQuestion;\r\n        if (question.nquestion) { returnValue = question.nquestion; }\r\n        else { returnValue = {} as NQuestion; }\r\n\r\n        returnValue.PageNumber = (parent ? parent.visibleIndex : 0) + 1;\r\n\r\n        //if (!(returnValue.DisplayOrder && returnValue.DisplayOrder > 0)) \r\n        {\r\n            returnValue.DisplayOrder = (parent ? parent.elements.indexOf(question) : 0) + 1;\r\n        }\r\n        //returnValue.QuestionText = (question.title && question.title != '') ? question.title : question.name;\r\n        returnValue.QuestionText = (question.name == question.title) ? '' : question.title;\r\n\r\n        returnValue.QuestionType = \"single\";\r\n        returnValue.isSidebySide = !question.startWithNewLine;\r\n        let inputType: string = question.getType();\r\n        if (inputType == \"text\" && question.inputType != undefined) {\r\n            inputType = question.inputType;\r\n        }\r\n        if (inputType == \"dropdown\") {\r\n            returnValue.SelectionModeId = NInfo.SelectionMode.DropDownListSingle;\r\n        }\r\n        else if (inputType == \"matrixdropdown\") {\r\n            returnValue.SelectionModeId = NInfo.SelectionMode.MultiMatrix;\r\n            returnValue.QuestionType = \"matrix\";\r\n        }\r\n        else if (inputType == \"html\") {\r\n            returnValue.SelectionModeId = NInfo.SelectionMode.StaticTextInformation;\r\n            returnValue.QuestionText = question.html;\r\n        }\r\n        else if (inputType == \"checkbox\"){\r\n            returnValue.SelectionModeId = NInfo.SelectionMode.CheckBoxMultiple;\r\n        }\r\n        else {\r\n            returnValue.SelectionModeId = NInfo.SelectionMode.RadioButtonSingle;\r\n        }\r\n\r\n        if (returnValue.QuestionType == \"single\") {\r\n            if (returnValue.Answer == undefined) {\r\n                returnValue.Answer = [];\r\n            }\r\n\r\n            if (question.choices && question.choices.length > 0) {\r\n                //Implement Delete Case Here\r\n                var CurrentIDList = question.choices.map(function (el) { if (el.value) return el.rowid });\r\n                returnValue.Answer.forEach(element => {\r\n                    if (CurrentIDList.indexOf(Number(element.AnswerId)) == -1) {\r\n                        if(element.AnswerTypeId != 2) {\r\n                            element._OprationType = 'delete';\r\n                        }\r\n                    }\r\n                });\r\n                //Check for Add/Modify case\r\n                question.choices.forEach(element => {\r\n                    let ansText: string = '';\r\n                    let ansValue: number = -1;\r\n                    let opType = '';\r\n                    if (typeof (element) == \"string\") {\r\n                        ansText = element;\r\n                        opType = 'add';\r\n                    }\r\n                    else {\r\n                        var ansIndex = returnValue.Answer.findIndex(a => a.AnswerId == element.rowid);\r\n                        ansText = element.text;\r\n                        if (ansIndex != -1) {\r\n                            opType = 'edit';\r\n                            ansValue = element.value;\r\n                        }\r\n                        else { opType = 'add'; }\r\n                    }\r\n                    if (opType == 'add') {\r\n                        let ans: NAnswer = {} as NAnswer;\r\n                        let inputType1 = inputType == \"checkbox\"? \"radiogroup\":inputType;\r\n                        ans.AnswerTypeId = new NSurveyLogic().getAnswerTypeIdByType(inputType1);\r\n                        ans.Answertext = ansText;\r\n                        ans.AnswerId = -1;\r\n                        ans._OprationType = opType;\r\n                        //if (question.isRequired) { ans.isMandatory = question.isRequired; }\r\n                        if (ans.AnswerTypeId > 0) {\r\n                            returnValue.Answer.push(ans);\r\n                        }\r\n                    }\r\n                    else if (opType == 'edit') {\r\n                        var ans = returnValue.Answer.find(a => a.AnswerId == element.rowid);\r\n                        if (ans) {\r\n                            ans._OprationType = opType;\r\n                            ans.Answertext = ansText;\r\n                        }\r\n                    }\r\n                });\r\n                // If Col Count is 0 or greater Then 1 it will be horizontal\r\n                if (question.colCount != 1) {\r\n                    returnValue.LayoutModeId = NInfo.LayoutModeId.Horizontal;\r\n                }\r\n                else {\r\n                    returnValue.LayoutModeId = NInfo.LayoutModeId.Vertical;\r\n                }\r\n                \r\n                if (question.hasOther && question.hasOther == true) {\r\n                    let eleItem:NAnswer =  returnValue.Answer.filter(t => t.AnswerTypeId == 2)[0];\r\n                    if(eleItem == undefined) {\r\n                        let answer: NAnswer = {} as any;\r\n                        answer.AnswerTypeId = 2;\r\n                        answer.AnswerId = -1;\r\n                        answer.Answertext = question.otherText;\r\n                        answer._OprationType = 'add';\r\n                        //if (question.isRequired) { answer.isMandatory = question.isRequired; }\r\n                        returnValue.Answer.push(answer);\r\n                    }\r\n                    else {\r\n                        eleItem.Answertext =  question.otherText;\r\n                        eleItem._OprationType = 'edit';\r\n                        var idx =returnValue.Answer.findIndex(t => t.AnswerTypeId == 2);\r\n                        var item = returnValue.Answer.slice(idx ,1);\r\n                        if(item.length !=0)\r\n                        {\r\n                            returnValue.Answer.push(item[0]);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    let eleItem:NAnswer =  returnValue.Answer.filter(t => t.AnswerTypeId == 2)[0];\r\n                    if(eleItem != undefined) {\r\n                        eleItem._OprationType = 'delete';\r\n                    }\r\n                }\r\n            }\r\n            //Sigle Question Without Choice like text and others\r\n            else {\r\n                let answer: NAnswer = {} as any;\r\n                //if (question.isRequired) { answer.isMandatory = question.isRequired; }\r\n                var xmlControlIds = xmlControlList.map(item => item.AnswerTypeId);\r\n                if (xmlControlIds.indexOf(question.answertypeid) > -1) {\r\n                    var arrControl = xmlControlList.filter(a => { return a.AnswerTypeId == question.answertypeid });\r\n                    if (arrControl.length > 0) {\r\n                        inputType = arrControl[0].name;\r\n                    }\r\n                }\r\n                if (inputType != \"html\") {\r\n                    answer.AnswerTypeId = new NSurveyLogic().getAnswerTypeIdByType(inputType);\r\n                }\r\n                //FOR EDIT\r\n                if (returnValue.Answer && returnValue.Answer.length > 0) {\r\n                    //FOR DATETIME\r\n                    if (inputType == \"datetime\") {\r\n                        question.nquestion.LayoutModeId = NInfo.LayoutModeId.Horizontal;\r\n                        // If Already DateTime -> do nothiung\r\n                        if (!(returnValue.Answer.findIndex(t => t.AnswerTypeId == new NSurveyLogic().getAnswerTypeIdByType('text')) > -1\r\n                            && returnValue.Answer.findIndex(t => t.AnswerTypeId == new NSurveyLogic().getAnswerTypeIdByType('datetime')) > -1)) {\r\n                            returnValue.Answer.forEach(ele => {\r\n                                ele._OprationType = 'delete';\r\n                            });\r\n                            if (answer.AnswerTypeId > 0) {\r\n                                answer._OprationType = 'add';\r\n                                answer.DefaultText = '##CurrentDateTime##';\r\n                                returnValue.Answer.push(answer);\r\n                                let answer1: NAnswer = {} as any;\r\n                                answer1._OprationType = 'add';\r\n                                answer1.AnswerTypeId = new NSurveyLogic().getAnswerTypeIdByType('text');\r\n                                answer1.DefaultText = '##CurrentTime##';\r\n                                returnValue.Answer.push(answer1);\r\n                            }\r\n                        }\r\n                        else {\r\n                            //IF Already DateTime Re Set Default text\r\n                            var ans1 = returnValue.Answer.find(t => t.AnswerTypeId == new NSurveyLogic().getAnswerTypeIdByType('datetime'));\r\n                            if(ans1 != undefined) {\r\n                                ans1.DefaultText = '##CurrentDateTime##';\r\n                                ans1._OprationType = 'edit';\r\n                            }\r\n                            var ans2 = returnValue.Answer.find(t => t.AnswerTypeId == new NSurveyLogic().getAnswerTypeIdByType('text'));\r\n                            if(ans2 != undefined) {\r\n                                ans2.DefaultText = '##CurrentTime##';\r\n                                ans2._OprationType = 'edit';\r\n                            }\r\n                            \r\n                        }\r\n                    }\r\n                    else {\r\n                        question.nquestion.LayoutModeId = NInfo.LayoutModeId.Vertical;\r\n\r\n                        //if(question.defaultValue && question.defaultValue != \"\")\r\n                        if (inputType == 'text' && question.placeHolder && question.placeHolder != \"\") {\r\n                            //EDIT CODE FOR PRESURVEY\r\n                            var arrDefaultTexts = (question.placeHolder + \"\").split(',');\r\n                            for (let i = 0; i < returnValue.Answer.length; i++) {\r\n                                if (i < arrDefaultTexts.length) {\r\n                                    if (i == 0) {\r\n                                        if (returnValue.Answer[i].AnswerTypeId != new NSurveyLogic().getAnswerTypeIdByType('text')) {\r\n                                            returnValue.Answer[i].AnswerTypeId = new NSurveyLogic().getAnswerTypeIdByType('text');\r\n                                            returnValue.Answer[i].DefaultText = (arrDefaultTexts[i] + \"\").trim();\r\n                                            returnValue.Answer[i]._OprationType = 'edit';\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    returnValue.Answer[i]._OprationType = 'delete';\r\n                                }\r\n                            }\r\n                            if (arrDefaultTexts.length > returnValue.Answer.length) {\r\n                                for (let i = returnValue.Answer.length; i < arrDefaultTexts.length; i++) {\r\n                                    let answer1: NAnswer = {} as any;\r\n                                    answer1._OprationType = 'add';\r\n                                    answer1.DefaultText = (arrDefaultTexts[i] + \"\").trim();\r\n                                    if (i == 0) {\r\n                                        answer1.AnswerTypeId = new NSurveyLogic().getAnswerTypeIdByType('text');\r\n                                    }\r\n                                    else {\r\n                                        answer1.AnswerTypeId = new NSurveyLogic().getAnswerTypeIdByType('hidden');\r\n                                    }\r\n                                    returnValue.Answer.push(answer1);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            returnValue.Answer.forEach(ans => {\r\n                                if (ans.DefaultText && ans.DefaultText != \"\") {\r\n                                    ans.DefaultText = \"\";\r\n                                    ans._OprationType = 'edit';\r\n                                }\r\n                            });\r\n                            if (returnValue.Answer.length == 1 && returnValue.Answer[0].AnswerTypeId == answer.AnswerTypeId) {\r\n                                // Do Nothing, Because No Change in Type.\r\n                            }\r\n                            else {\r\n                                returnValue.Answer.forEach(ele => {\r\n                                    ele._OprationType = 'delete';\r\n                                });\r\n                                answer._OprationType = 'add';\r\n                                returnValue.Answer.push(answer);\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n                //FOR ADD CASE\r\n                else {\r\n                    //FOR DATETIME\r\n                    if (inputType == \"datetime\") {\r\n                        if (answer.AnswerTypeId > 0) {\r\n                            answer.DefaultText = '##CurrentDateTime##';\r\n                            returnValue.Answer.push(answer);\r\n                            let answer1: NAnswer = {} as any;\r\n                            answer1.AnswerTypeId = new NSurveyLogic().getAnswerTypeIdByType('text');\r\n                            answer1.DefaultText = '##CurrentTime##';\r\n                            returnValue.Answer.push(answer1);\r\n                            question.nquestion.LayoutModeId = NInfo.LayoutModeId.Horizontal;\r\n                        }\r\n                    }\r\n                    else {\r\n                        //if(question.defaultValue && question.defaultValue != \"\")\r\n                        if (inputType == 'text' && question.placeHolder && question.placeHolder != \"\") {\r\n                            if (inputType != 'text') {\r\n                                question.type = 'text';\r\n                            }\r\n                            var arrDefaultTexts = (question.placeHolder + \"\").split(',');\r\n                            for (let i = 0; i < arrDefaultTexts.length; i++) {\r\n                                let answer1: NAnswer = {} as any;\r\n                                answer1.DefaultText = arrDefaultTexts[i];\r\n                                if (i == 0) {\r\n                                    answer1.AnswerTypeId = new NSurveyLogic().getAnswerTypeIdByType('text');\r\n                                }\r\n                                else {\r\n                                    answer1.AnswerTypeId = new NSurveyLogic().getAnswerTypeIdByType('hidden');\r\n                                }\r\n\r\n                                returnValue.Answer.push(answer1);\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (answer.AnswerTypeId == 0) { \r\n                                answer.AnswerTypeId = new NSurveyLogic().getAnswerTypeIdByType('text');\r\n                            }\r\n                            if (answer.AnswerTypeId > 0) {\r\n                                //if(returnValue.Answer == undefined) returnValue.Answer = [];\r\n                                returnValue.Answer.push(answer);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (question.isRequired) {\r\n                returnValue.Answer.forEach(answer => {\r\n                    answer.isMandatory = question.isRequired;\r\n                });\r\n            }\r\n        }\r\n        else if (returnValue.QuestionType == \"matrix\") {\r\n            if (returnValue.Rows == undefined) { returnValue.Rows = []; }\r\n            if (returnValue.Columns == undefined) { returnValue.Columns = []; }\r\n\r\n            //Implement Delete Case Here\r\n            var CurrentRowIDList = question.rows.map(function (el) { if (el.rowid != undefined) return el.rowid });\r\n            returnValue.Rows.forEach(row => {\r\n                if (CurrentRowIDList.indexOf(Number(row.RowId)) == -1 && row._OprationType != 'ignore') {\r\n                    row._OprationType = 'delete';\r\n                }\r\n            });\r\n            var CurrentColIDList = question.columns.map(function (el) { if (el.columnid != undefined) return el.columnid });\r\n            returnValue.Columns.forEach(col => {\r\n                if (CurrentColIDList.indexOf(Number(col.ColumnId)) == -1) {\r\n                    col._OprationType = 'delete';\r\n                }\r\n            });\r\n\r\n            question.rows.forEach(element => {\r\n                let opType = '';\r\n                var row = returnValue.Rows.find(a => a.RowId == element.rowid);\r\n                if (row == undefined || (row && row._OprationType != 'ignore')) {\r\n                    if (typeof (element) == \"string\") {\r\n                        opType = 'add';\r\n                    }\r\n                    else {\r\n                        //var ansIndex = returnValue.Rows.findIndex(a=>a.RowId == element.rowid);\r\n                        if (row != undefined) {\r\n                            opType = 'edit';\r\n                        }\r\n                        else { opType = 'add'; }\r\n                    }\r\n\r\n                    if (opType == 'add') {\r\n                        let matrixRow: NMatrixRow = {} as any;\r\n                        matrixRow.Name = typeof (element) == \"string\" ? ' ' : element.text;\r\n                        matrixRow.RowId = 0;\r\n                        matrixRow._OprationType = opType;\r\n                        returnValue.Rows.push(matrixRow);\r\n                    }\r\n                    else if (opType == 'edit') {\r\n                        //var row = returnValue.Rows.find(a=>a.RowId == element.rowid);\r\n                        if (row != undefined) {\r\n                            row._OprationType = opType;\r\n                            row.Name = typeof (element) == \"string\" ? ' ' : element.text;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            question.columns.forEach(element => {\r\n                let opType = '';\r\n                var col = returnValue.Columns.find(a => a.ColumnId == element.columnid);\r\n                if (col == undefined || (col && col._OprationType != 'ignore')) {\r\n                    if (typeof (element) == \"string\") {\r\n                        opType = 'add';\r\n                    }\r\n                    else {\r\n                        //var ansIndex = returnValue.Columns.findIndex(a=>a.ColumnId == element.columnid);\r\n                        if (col != undefined) {\r\n                            opType = 'edit';\r\n                        }\r\n                        else { opType = 'add'; }\r\n                    }\r\n\r\n                    let cellType: string = question.cellType;\r\n                    if (element.cellType != 'default') { \r\n                        if(element.cellType == 'text') {\r\n                            cellType = element.inputType;\r\n                        }\r\n                        else {\r\n                            cellType = element.cellType; \r\n                        }\r\n                    }\r\n                    \r\n                    if (opType == 'add') {\r\n\r\n                        let matrixCol: NMatrixColumn = {} as any;\r\n                        matrixCol.AnswerTypeId = new NSurveyLogic().getAnswerTypeIdByType(cellType);\r\n                        matrixCol.Name = typeof (element) == \"string\" ? ' ' : element.title;\r\n                        matrixCol.ColumnId = 0;\r\n                        matrixCol.isMandatory = false;\r\n                        matrixCol._OprationType = opType;\r\n                        //FOR XML DropDown\r\n                        if (cellType == 'dropdown') {\r\n                            matrixCol.ChoiceList = [];\r\n                            element.choices.forEach(chElement => {\r\n                                let ansText: string = '';\r\n                                //let ansValue: number = -1;\r\n                                if (typeof (chElement) == \"string\") {\r\n                                    ansText = chElement;\r\n                                }\r\n                                else {\r\n                                    ansText = chElement.text;\r\n                                    //ansValue = chElement.value;\r\n                                }\r\n\r\n                                let ans: NAnswer = {} as NAnswer;\r\n                                ans.AnswerTypeId = new NSurveyLogic().getAnswerTypeIdByType(cellType);\r\n                                ans.Answertext = ansText;\r\n                                ans.AnswerId = -1;\r\n                                if (ans.AnswerTypeId > 0) {\r\n                                    matrixCol.ChoiceList.push(ans);\r\n                                }\r\n                            });\r\n                        }\r\n                        if (matrixCol.AnswerTypeId != 0) {\r\n                            returnValue.Columns.push(matrixCol);\r\n                        }\r\n                    }\r\n                    else if (opType == 'edit') {\r\n                        // DO Nothing if XML Dropdown\r\n                        if (col != undefined && cellType != 'dropdown') {\r\n                            col._OprationType = opType;\r\n                            col.AnswerTypeId = new NSurveyLogic().getAnswerTypeIdByType(cellType);\r\n                            //col.Name  = typeof (element) == \"string\" ? element : (element.title ? element.title: element.name);\r\n                            col.Name = typeof (element) == \"string\" ? ' ' : element.title;\r\n                            col.isMandatory = element.isRequired;\r\n                        }\r\n                    }\r\n                    // SurveyJs Not Allow to set Required Validation for perticular Controls\r\n                }\r\n            });\r\n        }\r\n        console.log(returnValue);\r\n        return returnValue;\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_directives/surveyEditor.directive.ts","import { ChildQuestion } from \"./NSurveyXmlData\";\r\n\r\nexport class NSurveyLogic {\r\n    \r\n    getAnswerTypeIdByType(_AnswerType: string): number {\r\n        if(NInfo.AnswerType[_AnswerType] != undefined)\r\n        {\r\n            return NInfo.AnswerType[_AnswerType];\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getAnswerTypeByID(_TypeID:number):string {\r\n        try {\r\n            return Object.keys(NInfo.AnswerType).find(key => NInfo.AnswerType[key] === Number(_TypeID));\r\n        }\r\n        catch(ex) {\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class NQuestion {\r\n    SurveyID: number;\r\n    QuestionID: number;\r\n    QuestionText: string;\r\n    PageNumber: number;\r\n    DisplayOrder: number;\r\n    QuestionType: string;\r\n    SelectionModeId:number;\r\n    Answer: NAnswer[];\r\n    ChildQuestion: ChildQuestion[];\r\n    Rows:NMatrixRow[];\r\n    Columns:NMatrixColumn[];\r\n     \r\n    LanguageCode:string;\r\n    ColumnsNumber:number;\r\n    MinSelectionRequired:number;\r\n    MaxSelectionAllowed:number;\r\n    LayoutModeId:number;\r\n    RandomizeAnswers:boolean = false;\r\n    RatingEnabled:boolean = false;\r\n    QuestionPipeAlias:string;\r\n    QuestionIdText:string;\r\n    ShowHelpText:boolean = false;\r\n    Alias:string;\r\n    HelpText:string;\r\n    isSidebySide:boolean = false;\r\n}\r\n\r\nexport class NAnswer\r\n{\r\n    AnswerId: number;\r\n    AnswerTypeId:number;\r\n    AnswerIDText:string=\"\";\r\n    Answertext: string=\"\";\r\n    DefaultText: string=\"\";\r\n    AnswerAlias: string=\"\";\r\n    AnswerPipeAlias: string=\"\";\r\n    ImageURL: string=\"\";\r\n    isMandatory: boolean = false;\r\n    isRatePart: boolean = false;\r\n    isSelected: boolean = false;\r\n    ScorePoint: number = 0;\r\n    SliderRange: string;\r\n    SliderValue: number=0;\r\n    SliderMin: number=0;\r\n    SliderMax: number=0;\r\n    isSliderAnimate: boolean=false;\r\n    SliderStep: number = 0;\r\n    RegularExpressionId: number = 0;\r\n\r\n    _OprationType:string;\r\n}\r\n\r\n\r\nexport class NMatrixRow\r\n{\r\n    RowId: number;\r\n    Name: string;\r\n\r\n    _OprationType:string;\r\n}\r\n\r\nexport class NMatrixColumn\r\n{\r\n    ColumnId: number;\r\n    Name: string;\r\n    Value: string;\r\n    AnswerTypeId: number;\r\n    isMandatory: boolean;\r\n    _OprationType:string;\r\n\r\n    ChoiceList?:NAnswer[];\r\n    AnswerType?:NAnswerType;\r\n}\r\n\r\nexport class NAnswerType\r\n{\r\n    AnswerTypeID: number;\r\n    Description: string;\r\n    TypeAssembly: string;\r\n    TypeNameSpace: string;\r\n    XmlDataSource: string;\r\n    BuiltIn: boolean;\r\n    TypeMode: number;\r\n}\r\n\r\nexport class NSurveyDetails\r\n{\r\n    SurveyId: number;\r\n    Title:string;\r\n    isActive:boolean;\r\n    QuestionNumberingDisabled:boolean;\r\n}\r\n\r\nexport let NInfo = {\r\n    AnswerType : {\r\n        text:3,\r\n        date:22,\r\n        datetime:22,\r\n        email:26,\r\n        password:28,     \r\n        range:56,\r\n        comment: 24,\r\n        html:58,\r\n        file:30,\r\n        checkbox:20,\r\n        radiogroup:1,\r\n        dropdown:1,\r\n        matrixdropdown:0,\r\n        signaturepad:102,\r\n        hidden:101,\r\n        editor:31,\r\n\r\n        xmlactivitiesofdailyliving:109,\r\n        xmlevaluation:111,\r\n        xmlgradelist:59,\r\n        xmlrelatedcompetencies:106,\r\n        xmlshorttermobjectivearticulation:108,\r\n        xmlshorttermobjectivelanguage:110,\r\n        xmlstatus:107,\r\n        xmlsubjectlist:60,\r\n        xmlcountrylist:4,\r\n\r\n    },\r\n    SelectionMode : {\r\n        RadioButtonSingle: 1,\r\n        CheckBoxMultiple: 2,\r\n        DropDownListSingle: 3,\r\n        MultiMatrix: 4,\r\n        StaticTextInformation: 5,\r\n    },\r\n    LayoutModeId: {\r\n        Vertical:1,\r\n        Horizontal:2\r\n    }\r\n}\r\n\r\n \r\n \n\n\n// WEBPACK FOOTER //\n// ./src/app/_models/NSurveyModel.ts","import { NSurveyXmlData, Question, Answer } from '../_models/NSurveyXmlData';\r\nimport { AppSettings, UrlConfig } from '../app.setting';\r\nimport { transition } from '@angular/core';\r\nimport { IPage } from 'survey-knockout';\r\nimport { fail } from 'assert';\r\nimport { NQuestion, NAnswer, NMatrixRow, NInfo, NSurveyLogic } from './NSurveyModel';\r\nimport { type } from 'os';\r\n\r\n\r\nlet urlSetting: UrlConfig = new UrlConfig(window);\r\n\r\nexport class SurveyJSData {\r\n    SurveyJson = <ISurveyJSJson>{};\r\n\r\n    constructor() { }\r\n    loadNSurvey(nSurvey: NSurveyXmlData) {\r\n        //this.SurveyJson.pages = [];\r\n        //this.SurveyJson.pages.push({ name: 'page1', elements: [] });\r\n        this.SurveyJson = this.initilizeSurveyJson(nSurvey);\r\n        if (nSurvey.survey) {\r\n            this.SurveyJson.title = nSurvey.survey.Title;\r\n        }\r\n\r\n        if (nSurvey.survey.question) {\r\n            nSurvey.survey.question.forEach(que => {\r\n                let element = this.getConvertedQuestion(que);\r\n                if (element != null) {\r\n                    //element.nquestion.LanguageCode = \r\n                    element.nquestion.SurveyID = nSurvey.survey.SurveyID;\r\n                    this.SurveyJson.pages[0].elements.push(element);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get converted surveyjs page element from given question object.\r\n     * @param question \r\n     */\r\n    getConvertedQuestion(question: Question): IBaseQuestion {\r\n        let returnValue: IBaseQuestion = {} as any;\r\n        returnValue = this.getQuestionType(question);\r\n        return returnValue;\r\n    }\r\n\r\n    /**\r\n     * Get Question type for question\r\n     * @param question \r\n     */\r\n    getQuestionType(question: Question): IBaseQuestion {\r\n        let returnValue: IBaseQuestion;\r\n        let qType: QuestionType = new QuestionType(question)\r\n        return qType.returnSurveyElement();\r\n    }\r\n    \r\n    initilizeSurveyJson(nSurvey: NSurveyXmlData): ISurveyJSJson {\r\n        var _surveyid = 0, _title = '', _showQuestionNumbers = '', _isActive = false;\r\n        if (nSurvey) {\r\n            _surveyid = nSurvey.survey.SurveyID;\r\n            _title = nSurvey.survey.Title;\r\n            _isActive = nSurvey.survey.Activated;\r\n            _showQuestionNumbers = nSurvey.survey.QuestionNumberingDisabled && eval(nSurvey.survey.QuestionNumberingDisabled + \"\") == true ? 'off' : 'on';\r\n        }\r\n        return {\r\n            pages: [{ name: 'page1', elements: [] }],\r\n            showQuestionNumbers: _showQuestionNumbers,\r\n            title: _title,\r\n            isActive:_isActive,\r\n            showTitle: false,\r\n            surveyid: _surveyid,\r\n        } as ISurveyJSJson\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nclass QuestionType {\r\n    _question: Question\r\n    AnswerTypeId: number = 0;\r\n    SelectionModeId: number;\r\n    LayoutModeId: number;\r\n\r\n    IsSameTypeAnswer: boolean = false;\r\n    constructor(question: Question) {\r\n        this._question = question;\r\n        this.AnswerTypeId = -1;\r\n        this.SelectionModeId = question._SelectionModeId;\r\n        this.LayoutModeId = question._LayoutModeId;\r\n\r\n        if (question.answers != undefined && question.answers.length > 0) {\r\n            this.IsSameTypeAnswer = question.answers.map(r => r._AnswerTypeId).every(val => val === question.answers[0]._AnswerTypeId)\r\n            if (this.IsSameTypeAnswer) {\r\n                this.AnswerTypeId = question.answers[0]._AnswerTypeId;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    returnSurveyElement(): IBaseQuestion {\r\n        let returnValue: IBaseQuestion = this.initilizeQuestion();\r\n        returnValue.answertypeid = this.AnswerTypeId;\r\n        //RadioButton\r\n        if (this.SelectionModeId == enSelectionModeId.RadioButton) {\r\n            //FOR DATE TIME CONTROL\r\n            if (this._question.answers.filter(a => { return a._AnswerTypeId == enAnswerTypeId.FieldCalendarType || a._AnswerTypeId == enAnswerTypeId.FieldBasicType }).length == 2 && this._question.answers.length == 2) {\r\n                let element: ITextQuestion = new ITextQuestion(returnValue, enInputType.DateTime);\r\n                Object.assign(element, returnValue);\r\n                returnValue = element;\r\n            }\r\n            else {\r\n                //FOR PRESURVEY QUESTION\r\n                var isPreSurveyQuestion = true;\r\n                if (this._question.answers.findIndex(t => (t._AnswerTypeId != enAnswerTypeId.FieldBasicType && t._AnswerTypeId != enAnswerTypeId.iAspireHidden)) > -1) {\r\n                    isPreSurveyQuestion = false;\r\n                }\r\n                if (isPreSurveyQuestion == true && this._question.answers.length > 1) {\r\n                    let eleMulti: IBaseQuestion = this.getMultiQuestionInColumn(returnValue);\r\n                    if (eleMulti != null) {\r\n                        Object.assign(eleMulti, returnValue);\r\n                    }\r\n                    returnValue = eleMulti;\r\n                }\r\n                else {\r\n                    let eleOther: IBaseQuestion = this.getQuestionByAnswer(this._question.answers[0]);\r\n                    if (eleOther != null) {\r\n                        Object.assign(eleOther, returnValue);\r\n                    }\r\n                    returnValue = eleOther;\r\n                }\r\n            }\r\n        }\r\n        // Checkbox\r\n        else if (this.SelectionModeId == enSelectionModeId.Checkbox) {\r\n            //FOR DATE TIME CONTROL\r\n            if (this._question.answers.filter(a => { return a._AnswerTypeId == enAnswerTypeId.FieldCalendarType || a._AnswerTypeId == enAnswerTypeId.FieldBasicType }).length == 2 && this._question.answers.length == 2) {\r\n                let element: ITextQuestion = new ITextQuestion(returnValue, enInputType.DateTime);\r\n                Object.assign(element, returnValue);\r\n                returnValue = element;\r\n            }\r\n            else {\r\n                //FOR PRESURVEY QUESTION\r\n                var isPreSurveyQuestion = true;\r\n                if (this._question.answers.findIndex(t => (t._AnswerTypeId != enAnswerTypeId.FieldBasicType && t._AnswerTypeId != enAnswerTypeId.iAspireHidden)) > -1) {\r\n                    isPreSurveyQuestion = false;\r\n                }\r\n                if (isPreSurveyQuestion == true && this._question.answers.length > 1) {\r\n                    let eleMulti: IBaseQuestion = this.getMultiQuestionInColumn(returnValue);\r\n                    if (eleMulti != null) {\r\n                        Object.assign(eleMulti, returnValue);\r\n                    }\r\n                    returnValue = eleMulti;\r\n                }\r\n                else {\r\n                    let eleOther: IBaseQuestion = this.getQuestionByAnswer(this._question.answers[0]);\r\n                    if(eleOther != null && eleOther.constructor.name == \"IRadioGroupQuestion\")\r\n                    {\r\n                        let eleOther1:ICheckboxGroupQuestion = eleOther as ICheckboxGroupQuestion;\r\n                        eleOther1.type = enType.CheckBox;\r\n                        Object.assign(eleOther1, returnValue);\r\n                        //let newEleOther:ICheckboxGroupQuestion = {} as any;\r\n                        //Object.assign(newEleOther, eleOther);\r\n                        //eleOther = newEleOther;\r\n                    }\r\n                    else if (eleOther != null) {\r\n                        Object.assign(eleOther, returnValue);\r\n                    }\r\n                    returnValue = eleOther;\r\n                }\r\n            }\r\n            //console.error(\"Not Found: 1 this.AnswerTypeId = \" + this.AnswerTypeId);\r\n        }\r\n        //DropDownList\r\n        else if (this.SelectionModeId == enSelectionModeId.DropDownList) {\r\n            if (this.IsSameTypeAnswer) {\r\n                //Selection text\r\n                if (this.AnswerTypeId == enAnswerTypeId.SelectionTextType) {\r\n                    let element: IDropDownQuestion = new IDropDownQuestion(returnValue, this._question.answers);\r\n                    Object.assign(element, returnValue);\r\n                    returnValue = element;\r\n                }\r\n                else {\r\n                    var xmlControlIds = xmlControlList.map(item => item.AnswerTypeId);\r\n                    if (xmlControlIds.indexOf(Number(this.AnswerTypeId)) > -1) {\r\n                        let element: IDropDownQuestion = new IDropDownQuestion(returnValue, this._question.answers);\r\n                        Object.assign(element, returnValue);\r\n                        var control = xmlControlList.find(c => c.AnswerTypeId == this.AnswerTypeId);\r\n                        if (control != null) {\r\n                            element.questiontype = control.name.toLowerCase();\r\n                            element.setChoicesByUrl(control);\r\n                        }\r\n                        returnValue = element;\r\n                    }\r\n                    else {\r\n                        console.error(\"Not Found: 1 this.AnswerTypeId = \" + this.AnswerTypeId);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                //FOR PRESURVEY QUESTION\r\n                if (this._question.answers.length > 1) {\r\n                    let eleMulti: IBaseQuestion = this.getMultiQuestionInColumn(returnValue);\r\n                    if (eleMulti != null) {\r\n                        Object.assign(eleMulti, returnValue);\r\n                    }\r\n                    returnValue = eleMulti;\r\n                }\r\n                // else\r\n                // {\r\n                //     let eleOther: IBaseQuestion = this.getQuestionByAnswer(this._question.answers[0]);\r\n                //     if(eleOther != null)\r\n                //     {\r\n                //         Object.assign(eleOther, returnValue);\r\n                //     }\r\n                //     returnValue = eleOther;\r\n                // }\r\n                //console.error(\"Not Found: 3 this.AnswerTypeId = \" + this.AnswerTypeId);\r\n            }\r\n\r\n        }\r\n        //Static - StaticTextSelection [Html]\r\n        else if (this.SelectionModeId == enSelectionModeId.Static) {\r\n            let element: IHtmlQuestion = new IHtmlQuestion(returnValue, clsFunction.getSpaceIfTextObject(this._question.QuestionText));\r\n            Object.assign(element, returnValue);\r\n            returnValue = element;\r\n        }\r\n        //Marix\r\n        else if (this.SelectionModeId == enSelectionModeId.Matrix) {\r\n            let element: IMatrixDropdownQuestion = new IMatrixDropdownQuestion(returnValue);\r\n            Object.assign(element, returnValue);\r\n            returnValue.nquestion.Rows = [];\r\n            returnValue.nquestion.Columns = [];\r\n            // For ROWS\r\n            if (this._question.childquestions && this._question.childquestions.length > 0) {\r\n                this._question.childquestions.forEach(child => {\r\n                    var itemText = clsFunction.getSpaceIfTextObject(child.QuestionText);\r\n                    element.rows.push({ text: itemText, value: 'row', rowid: child.ChildQuestionId });\r\n                    returnValue.nquestion.Rows.push({ RowId: child.ChildQuestionId, Name: itemText, _OprationType: '' });\r\n                });\r\n            }\r\n            else {\r\n                //element.rows.push({ value: 'Row', text: ' ', rowid: 0 });\r\n                //returnValue.nquestion.Rows.push({ RowId: 0, Name: ' ', _OprationType: 'ignore' });\r\n            }\r\n            //FOR COLUMNS\r\n            if (this._question.answers && this._question.answers.length > 0) {\r\n                this._question.answers.forEach(ans => {\r\n                    element.columns.push(this.getMatrixCoulmn(ans));\r\n                    returnValue.nquestion.Columns.push({ ColumnId: ans._AnswerId, _OprationType: '', Name: clsFunction.getSpaceIfTextObject(ans.AnswerText), AnswerTypeId: ans._AnswerTypeId, isMandatory: returnValue.isRequired, Value: '' });\r\n                });\r\n            }\r\n            returnValue = element;\r\n        }\r\n\r\n        //MultiMatrix - MatrixMultipleSelection\r\n        else if (this.SelectionModeId == enSelectionModeId.MultiMatrix) {\r\n            let element: IMatrixDropdownQuestion = new IMatrixDropdownQuestion(returnValue);\r\n            Object.assign(element, returnValue);\r\n            returnValue.nquestion.Rows = [];\r\n            returnValue.nquestion.Columns = [];\r\n            if (this._question.childquestions && this._question.childquestions.length > 0) {\r\n                this._question.childquestions.forEach(child => {\r\n                    var itemText = clsFunction.getSpaceIfTextObject(child.QuestionText);\r\n                    element.rows.push({ text: itemText, value: 'row', rowid: child.ChildQuestionId });\r\n                    returnValue.nquestion.Rows.push({ RowId: child.ChildQuestionId, Name: itemText, _OprationType: '' });\r\n                });\r\n            }\r\n            else {\r\n                element.rows.push({ value: 'Row', text: ' ', rowid: 0 });\r\n                returnValue.nquestion.Rows.push({ RowId: 0, Name: ' ', _OprationType: 'ignore' });\r\n            }\r\n\r\n            if (this._question.answers.length > 0) {\r\n                this._question.answers.forEach(ans => {\r\n                    element.columns.push(this.getMatrixCoulmn(ans));\r\n                    returnValue.nquestion.Columns.push({ ColumnId: ans._AnswerId, _OprationType: '', Name: clsFunction.getSpaceIfTextObject(ans.AnswerText), AnswerTypeId: ans._AnswerTypeId, isMandatory: returnValue.isRequired, Value: '' });\r\n                });\r\n            }\r\n            /*\r\n            //element.rows.push({value:'row', text:' ', rowid:0});\r\n            this._question.answers.forEach(ans=> {\r\n                element.columns.push(this.getMatrixCoulmn(ans));\r\n            });\r\n            */\r\n            returnValue = element;\r\n        }\r\n        else {\r\n            //DateTime [Check for Calender type with Date and Time]\r\n            if (this._question.answers.filter(a => { return a._AnswerTypeId == enAnswerTypeId.FieldCalendarType || a._AnswerTypeId == enAnswerTypeId.FieldBasicType }).length == 2 && this._question.answers.length == 2) {\r\n                let element: ITextQuestion = new ITextQuestion(returnValue, enInputType.DateTime);\r\n                Object.assign(element, returnValue);\r\n                returnValue = element;\r\n            }\r\n            // For Pre SurveyQuestion Text TextType\r\n            else if (this._question.answers.filter(a => { return a._AnswerTypeId == enAnswerTypeId.FieldBasicType || a._AnswerTypeId == enAnswerTypeId.iAspireHidden }).length == 2 && this._question.answers.length == 2) {\r\n                let elePanel: IPanelQuestion = new IPanelQuestion();\r\n                Object.assign(elePanel, returnValue);\r\n                this._question.answers.forEach(ans => {\r\n                    let eleText: ITextQuestion = new ITextQuestion(returnValue, enInputType.Text);\r\n                    Object.assign(elePanel, returnValue);\r\n                    //eleText.defaultValue = ans.DefaultText;\r\n                    eleText.placeHolder = ans.DefaultText;\r\n                    eleText.name = ans._AnswerId.toString();\r\n                    eleText.title = ' ';\r\n                    eleText.startWithNewLine = false;\r\n                    elePanel.elements.push(eleText);\r\n                });\r\n                returnValue = elePanel;\r\n            }\r\n            //All Other type Like Textbox, TextArea, etc.\r\n            else {\r\n                if (this._question.answers.length == 1) {\r\n                    let eleOther: IBaseQuestion = this.getQuestionByAnswer(this._question.answers[0]);\r\n                    if (eleOther != null) {\r\n                        Object.assign(eleOther, returnValue);\r\n                    }\r\n                    returnValue = eleOther;\r\n                }\r\n                else {\r\n                    console.error(\"Impliment for multianswer text\");\r\n                }\r\n            }\r\n        }\r\n        return returnValue;\r\n    }\r\n\r\n    getMultiQuestionInColumn(returnValue: IBaseQuestion): IBaseQuestion {\r\n        let element: ITextQuestion = new ITextQuestion(returnValue, enInputType.Text);\r\n        if (this._question.answers.length < 3) {\r\n            let arrVal = [];\r\n            this._question.answers.forEach(ans => {\r\n                arrVal.push(ans.DefaultText);\r\n            });\r\n            element.placeHolder = arrVal.join(',');\r\n        }\r\n        return element;\r\n\r\n        /*\r\n        let elePanel: IPanelQuestion = new IPanelQuestion();\r\n        this._question.answers.forEach(ans=> {\r\n             let element: IBaseQuestion = this.getQuestionByAnswer(ans);\r\n             if(element != null)\r\n             {\r\n                 element.name = ans._AnswerId.toString();\r\n                 element.title = ' ';\r\n                 element.startWithNewLine = false;\r\n             }\r\n             elePanel.elements.push(element); \r\n        })\r\n        return elePanel;\r\n        */\r\n    }\r\n\r\n    getMatrixCoulmn(answer: Answer): IMatrixColumn {\r\n        let returnValue: IMatrixColumn = {} as any;\r\n        returnValue.columnid = answer._AnswerId;\r\n        //returnValue.name = clsFunction.getSpaceIfTextObject(answer.AnswerText);\r\n        returnValue.name = 'column';\r\n        returnValue.title = clsFunction.getSpaceIfTextObject(answer.AnswerText);\r\n        returnValue.isRequired = answer._Mandatory;\r\n\r\n        //RadioGroup\r\n        if (answer._AnswerTypeId == enAnswerTypeId.SelectionTextType) {\r\n            returnValue.cellType = enMatrixCellType.RadioGroup;\r\n            //returnValue.choices = [];\r\n        }\r\n        //Text\r\n        else if (answer._AnswerTypeId == enAnswerTypeId.FieldBasicType ||\r\n                answer._AnswerTypeId == enAnswerTypeId.FieldCalendarType || \r\n                answer._AnswerTypeId == enAnswerTypeId.FieldEmailType ||\r\n                answer._AnswerTypeId == enAnswerTypeId.FieldPasswordType ) {\r\n            returnValue.cellType = enMatrixCellType.Text;\r\n            returnValue.inputType = new NSurveyLogic().getAnswerTypeByID(answer._AnswerTypeId);\r\n        }\r\n        //Comment\r\n        else if (answer._AnswerTypeId == enAnswerTypeId.FieldLargeType) {\r\n            returnValue.cellType = enMatrixCellType.Comment;\r\n        }\r\n        //DropDown OR Custom Created XML Type    \r\n        else if (answer._AnswerTypeId == 106 || (answer.answerType && answer.answerType.TypeNameSpace == \"Votations.NSurvey.WebControls.UI.AnswerXmlListItem\")) {\r\n            returnValue.cellType = enMatrixCellType.DropDown;\r\n            //returnValue.choices = [];\r\n            if (answer.answerType != undefined) {\r\n                returnValue.choicesByUrl = {\r\n                    url: urlSetting.WAP_BASE + \"XmlData/\" + answer.answerType.XMLDataSource,\r\n                    path: \"NSurveyDataSource;XmlDataSource;XmlAnswers;XmlAnswer\",\r\n                    valueName: \"AnswerValue\",\r\n                    titleName: \"AnswerDescription\"\r\n                }\r\n            }\r\n        }\r\n\r\n        return returnValue\r\n    }\r\n\r\n    getQuestionByAnswer(answer: Answer): IBaseQuestion {\r\n        let returnValue: IBaseQuestion;\r\n        if (answer == undefined)\r\n            return returnValue;\r\n\r\n        var xmlControlIds = xmlControlList.map(item => item.AnswerTypeId);\r\n        if (answer._AnswerTypeId == enAnswerTypeId.BooleanType || answer._AnswerTypeId == enAnswerTypeId.SelectionOtherType) {\r\n            let element: ICheckboxGroupQuestion = new ICheckboxGroupQuestion(returnValue, this._question.answers);\r\n            if (this._question._LayoutModeId == NInfo.LayoutModeId.Horizontal) {\r\n                element.colCount = this._question.answers.length;\r\n            }\r\n            //Object.assign(element, returnValue);\r\n            returnValue = element;\r\n        }\r\n        //RadioButtonList\r\n        else if (answer._AnswerTypeId == enAnswerTypeId.SelectionTextType || answer._AnswerTypeId == enAnswerTypeId.SelectionOtherType) {\r\n            let element: IRadioGroupQuestion = new IRadioGroupQuestion(returnValue, this._question.answers);\r\n            if (this._question._LayoutModeId == NInfo.LayoutModeId.Horizontal) {\r\n                element.colCount = this._question.answers.length;\r\n            }\r\n            //Object.assign(element, returnValue);\r\n            returnValue = element;\r\n        }\r\n        //Text\r\n        else if (answer._AnswerTypeId == enAnswerTypeId.FieldBasicType\r\n            || answer._AnswerTypeId == enAnswerTypeId.FieldEmailType\r\n            || answer._AnswerTypeId == enAnswerTypeId.FieldPasswordType) {\r\n            var inputType = new NSurveyLogic().getAnswerTypeByID(answer._AnswerTypeId);\r\n            let element: ITextQuestion = new ITextQuestion(returnValue, inputType);\r\n            if (answer.DefaultText && answer.DefaultText.trim() != \"\") {\r\n                //element.defaultValue = answer.DefaultText;\r\n                element.placeHolder = answer.DefaultText;\r\n            }\r\n            //Object.assign(element, returnValue);\r\n            returnValue = element;\r\n        }\r\n        //DateTime\r\n        else if (answer._AnswerTypeId == enAnswerTypeId.FieldCalendarType) {\r\n            let element: ITextQuestion = new ITextQuestion(returnValue, enInputType.Date);\r\n            //Object.assign(element, returnValue);\r\n            returnValue = element;\r\n        }\r\n        //Comment\r\n        else if (answer._AnswerTypeId == enAnswerTypeId.FieldLargeType) {\r\n            let element: ICommentQuestion = new ICommentQuestion(returnValue);\r\n            //Object.assign(element, returnValue);\r\n            returnValue = element;\r\n        }\r\n        //Editor\r\n        else if (answer._AnswerTypeId == enAnswerTypeId.ExtendedFreeTextBoxType) {\r\n            let element: ICKEditor = new ICKEditor(returnValue);\r\n            //Object.assign(element, returnValue);\r\n            returnValue = element;\r\n        }\r\n        //Hidden\r\n        else if (answer._AnswerTypeId == enAnswerTypeId.iAspireHidden) {\r\n            let element: ITextQuestion = new ITextQuestion(returnValue, enInputType.Text);\r\n            //element.defaultValue = answer.DefaultText;\r\n            element.placeHolder = answer.DefaultText;\r\n            //Object.assign(element, returnValue);\r\n            returnValue = element;\r\n        }\r\n        else if (answer._AnswerTypeId == enAnswerTypeId.ExtendedFileUploadType) {\r\n            let element: IFileUploadQuestion = new IFileUploadQuestion();\r\n            returnValue = element;\r\n        }\r\n        else if (xmlControlIds.indexOf(Number(answer._AnswerTypeId)) > -1) {\r\n            let element: IDropDownQuestion = new IDropDownQuestion(returnValue, this._question.answers);\r\n            var control = xmlControlList.find(c => c.AnswerTypeId == answer._AnswerTypeId);\r\n            if (control != null) {\r\n                element.questiontype = control.name.toLowerCase();\r\n                element.setChoicesByUrl(control);\r\n            }\r\n            returnValue = element;\r\n        }\r\n        else if (answer._AnswerTypeId == enAnswerTypeId.iAspireSignature) {\r\n            let element: ISignaturePad = new ISignaturePad(returnValue);\r\n            returnValue = element;\r\n        }\r\n\r\n        if (this._question.answers.filter(a => (a._Mandatory && a._Mandatory + \"\" == 'true')).length > 0) {\r\n            returnValue.isRequired = true;\r\n        }\r\n        return returnValue;\r\n    }\r\n\r\n    initilizeQuestion(): IBaseQuestion {\r\n        if (this._question == undefined)\r\n            return {} as any;\r\n        let strTitle: string = \" \";\r\n        let strName: string = \" \";\r\n        if (this._question.QuestionText != null && this._question.QuestionText != undefined && this._question.QuestionText != \"\") {\r\n            strName = strName.length > 70 ? strName.substr(0, 70) + \"...\" : strName;\r\n            strTitle = clsFunction.getSpaceIfTextObject(this._question.QuestionText)\r\n        }\r\n        this._question.isSidebySide = this._question.isSidebySide||false;\r\n        return {\r\n            questionid: this._question.OldQuestionId,\r\n            questiontype: '',\r\n            name: strName,\r\n            title: strTitle,\r\n            answertypeid: 0,\r\n            nquestion: this.setNQuestionData(this._question),\r\n            readOnly: false,\r\n            startWithNewLine: !eval(this._question.isSidebySide + \"\"),\r\n        };\r\n    }\r\n\r\n    setNQuestionData(que: Question): NQuestion {\r\n        let returnValue: NQuestion = {} as NQuestion\r\n        returnValue.SurveyID = que._SurveyId;\r\n        returnValue.QuestionID = que.OldQuestionId;\r\n        returnValue.QuestionText = clsFunction.getSpaceIfTextObject(que.QuestionText);\r\n        returnValue.PageNumber = que._PageNumber;\r\n        returnValue.DisplayOrder = que._DisplayOrder;\r\n        //returnValue.QuestionType = que.;\r\n        returnValue.SelectionModeId = que._SelectionModeId;\r\n        //returnValue.Answer = que.;\r\n        //returnValue.Rows = que.;\r\n        //returnValue.Columns = que.;\r\n        //returnValue.LanguageCode = ;\r\n        //returnValue.ColumnsNumber = que.;\r\n        returnValue.MinSelectionRequired = que._MinSelectionRequired;\r\n        returnValue.MaxSelectionAllowed = que._MaxSelectionAllowed;\r\n        returnValue.LayoutModeId = que._LayoutModeId;\r\n        returnValue.RandomizeAnswers = que._RandomizeAnswers;\r\n        returnValue.RatingEnabled = que._RatingEnabled;\r\n        returnValue.QuestionPipeAlias = que.QuestionPipeAlias;\r\n        returnValue.QuestionIdText = clsFunction.getSpaceIfTextObject(que.QuestionIDText);\r\n        returnValue.ShowHelpText = que.ShowHelpText;\r\n        returnValue.Alias = que.Alias;\r\n        returnValue.HelpText = que.HelpText;\r\n        returnValue.isSidebySide = que.isSidebySide;\r\n\r\n        returnValue.Answer = [];\r\n        returnValue.ChildQuestion = que.childquestions;\r\n        if (!returnValue.ChildQuestion) {\r\n            returnValue.ChildQuestion = [];\r\n        }\r\n\r\n        que.answers.forEach(ans => {\r\n            returnValue.Answer.push(this.setNAnswerData(ans));\r\n        });\r\n\r\n        return returnValue;\r\n    }\r\n\r\n    setNAnswerData(ans: Answer): NAnswer {\r\n        let nAns: NAnswer = {} as any;\r\n        nAns.AnswerId = ans._AnswerId;\r\n        nAns.AnswerTypeId = ans._AnswerTypeId;\r\n        nAns.AnswerIDText = clsFunction.getSpaceIfTextObject(ans.AnswerIdText);\r\n        nAns.Answertext = clsFunction.getSpaceIfTextObject(ans.AnswerText);\r\n        nAns.DefaultText = clsFunction.getSpaceIfTextObject(ans.DefaultText);\r\n        nAns.AnswerAlias = ans.AnswerAlias;\r\n        nAns.AnswerPipeAlias = ans.AnswerPipeAlias;\r\n        nAns.ImageURL = ans.ImageURL;\r\n        nAns.isMandatory = ans._Mandatory;\r\n        nAns.isRatePart = ans._RatePart;\r\n        nAns.isSelected = ans._Selected;\r\n        nAns.ScorePoint = ans._ScorePoint;\r\n        nAns.SliderRange = ans.SliderRange;\r\n        nAns.SliderValue = ans.SliderValue;\r\n        nAns.SliderMin = ans.SliderMax;\r\n        nAns.SliderMax = ans.SliderMax;\r\n        nAns.isSliderAnimate = ans.SliderAnimate;\r\n        nAns.SliderStep = ans.SliderStep;\r\n        nAns.RegularExpressionId = ans._RegularExpressionId;\r\n        return nAns;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * ISurveyJSJson\r\n */\r\ninterface ISurveyJSJson {\r\n    surveyid: number;\r\n    title: string;\r\n    showTitle: boolean\r\n    isActive:boolean;\r\n    showQuestionNumbers: string;\r\n    questionTitleTemplate: string;\r\n    questionStartIndex: string;\r\n    showProgressBar: string;\r\n    pages: IPages[];\r\n    SurveyGUID?: string;\r\n}\r\n\r\ninterface IPages {\r\n    name: string;\r\n    elements: IBaseQuestion[];\r\n}\r\n\r\nclass IBaseQuestion {\r\n    questionid: number;\r\n    questiontype: string;\r\n    name: string;\r\n    title: string;\r\n    placeHolder?: string;\r\n    type?: string;\r\n    description?: string;\r\n    width?: string;\r\n\r\n    answertypeid: number = 0;\r\n    readOnly?: boolean;\r\n    isRequired?: boolean;\r\n    startWithNewLine: boolean;\r\n    visible?: boolean;\r\n    visibleIf?: string;\r\n    nquestion: NQuestion;\r\n}\r\nclass ITextQuestion extends IBaseQuestion {\r\n    inputType: string;\r\n    //defaultValue: string;\r\n    //placeHolder:string;\r\n    constructor(que: IBaseQuestion, _inputType: string) {\r\n        super();\r\n        this.type = enType.Text;\r\n        this.inputType = _inputType;\r\n    }\r\n}\r\nclass ISignaturePad extends IBaseQuestion {\r\n    constructor(que: IBaseQuestion) {\r\n        super();\r\n        this.type = enType.SignaturePad;\r\n    }\r\n}\r\n\r\nclass ICommentQuestion extends IBaseQuestion {\r\n    //defaultValue: string;\r\n    //placeHolder: string;\r\n    rows?: number;\r\n    cols?: number;\r\n    //iscommentineditor:boolean;\r\n\r\n    constructor(que: IBaseQuestion) {\r\n        super();\r\n        //this.iscommentineditor = false;\r\n        this.type = enType.Comment;\r\n    }\r\n\r\n}\r\nclass ICKEditor extends IBaseQuestion {\r\n    //defaultValue: string;\r\n    //placeHolder: string;\r\n    \r\n    constructor(que: IBaseQuestion) {\r\n        super();\r\n        this.type = enType.Editor;\r\n    }\r\n\r\n}\r\nclass IFileUploadQuestion extends IBaseQuestion {\r\n    constructor() {\r\n        super();\r\n        this.type = enType.FileUpload;\r\n    }\r\n}\r\n\r\nclass IHtmlQuestion extends IBaseQuestion {\r\n    html: string;\r\n    constructor(que: IBaseQuestion, HtmlString: string) {\r\n        super();\r\n        this.type = enType.Html;\r\n        this.html = HtmlString;\r\n    }\r\n}\r\n\r\nclass IDropDownQuestion extends IBaseQuestion {\r\n    choices: IChoices[];\r\n    choicesByUrl?: IChoicesByUrl;\r\n    optionsCaption?: string;\r\n\r\n    constructor(que: IBaseQuestion, answers: Answer[]) {\r\n        super();\r\n        this.type = enType.DropDown;\r\n        this.choices = [];\r\n        answers.forEach(ans => {\r\n            this.choices.push({ rowid: ans._AnswerId, value: ans._AnswerId.toString(), text: clsFunction.getSpaceIfTextObject(ans.AnswerText) });\r\n        });\r\n    }\r\n    setChoicesByUrl(element) {\r\n        this.choicesByUrl = {\r\n            url: urlSetting.WAP_BASE + \"XmlData/\" + element.xmlFile,\r\n            path: \"NSurveyDataSource;XmlDataSource;XmlAnswers;XmlAnswer\",\r\n            valueName: \"AnswerValue\",\r\n            titleName: \"AnswerDescription\"\r\n        };\r\n    }\r\n}\r\n\r\nclass IRadioGroupQuestion extends IBaseQuestion {\r\n    choices: IChoices[];\r\n    choicesByUrl?: IChoicesByUrl;\r\n    choicesOrder?: string;\r\n    colCount?: number;\r\n    hasOther?: boolean;\r\n    otherText?: string;\r\n\r\n    constructor(que: IBaseQuestion, answers: Answer[]) {\r\n        super();\r\n        this.type = enType.RadioGroup;\r\n        this.choices = [];\r\n        answers.forEach(ans => {\r\n            ans.AnswerText = clsFunction.getSpaceIfTextObject(ans.AnswerText);\r\n            if (ans._AnswerTypeId == enAnswerTypeId.SelectionOtherType) {\r\n                this.hasOther = true;\r\n                this.otherText = clsFunction.getSpaceIfTextObject(ans.AnswerText);\r\n            }\r\n            else {\r\n                this.choices.push({ rowid: ans._AnswerId, value: ans._AnswerId.toString(), text: clsFunction.getSpaceIfTextObject(ans.AnswerText) });\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nclass ICheckboxGroupQuestion extends IBaseQuestion {\r\n    choices: IChoices[];\r\n    choicesByUrl?: IChoicesByUrl;\r\n    choicesOrder?: string;\r\n    colCount?: number;\r\n    hasOther?: boolean;\r\n    otherText?: string;\r\n\r\n    constructor(que: IBaseQuestion, answers: Answer[]) {\r\n        super();\r\n        this.type = enType.CheckBox;\r\n        this.choices = [];\r\n        answers.forEach(ans => {\r\n            ans.AnswerText = clsFunction.getSpaceIfTextObject(ans.AnswerText);\r\n            if (ans._AnswerTypeId == enAnswerTypeId.SelectionOtherType) {\r\n                this.hasOther = true;\r\n                this.otherText = clsFunction.getSpaceIfTextObject(ans.AnswerText);\r\n            }\r\n            else {\r\n                this.choices.push({ rowid: ans._AnswerId, value: ans._AnswerId.toString(), text: clsFunction.getSpaceIfTextObject(ans.AnswerText) });\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nclass IMatrixDropdownQuestion extends IBaseQuestion {\r\n    cellType: string;\r\n    choices: IChoices[];\r\n    columns: IMatrixColumn[];\r\n    rows: IMatrixRow[];\r\n\r\n    constructor(que: IBaseQuestion) {\r\n        super();\r\n        this.type = enType.MatrixDropdown;\r\n        this.choices = [];\r\n        this.columns = [];\r\n        this.rows = [];\r\n\r\n    }\r\n}\r\n\r\nclass IPanelQuestion extends IBaseQuestion {\r\n    elements: IBaseQuestion[];\r\n    constructor() {\r\n        super();\r\n        this.type = enType.Panel;\r\n        this.elements = [];\r\n    }\r\n}\r\n\r\ninterface IChoices { rowid: number; value: string; text: string; }\r\ninterface IChoicesByUrl { url: string, path?: string, valueName?: string, titleName?: string }\r\nexport interface IMatrixColumn {\r\n    columnid: number; name: string; title: string; isRequired: boolean\r\n    cellType?: string; choices?: IChoices[], choicesByUrl?: IChoicesByUrl, inputType?:string,\r\n}\r\n\r\nexport interface IMatrixRow { rowid: number; value: string; text: string; }\r\n\r\n\r\nenum enMatrixCellType {\r\n    DropDown = 'dropdown', CheckBox = 'checkbox', RadioGroup = 'radiogroup',\r\n    Text = 'text', Comment = 'comment', Boolean = 'boolean', DateTime = 'datetime',\r\n    Date = 'date', Email = 'email', Password = 'password',\r\n}\r\n\r\nenum enType {\r\n    Text = 'text', Html = 'html', RadioGroup = 'radiogroup', CheckBox = 'checkbox', Comment = 'comment', FileUpload = 'file', Panel = 'panel',Editor = 'editor',\r\n    DropDown = 'dropdown', MatrixDropdown = 'matrixdropdown', SignaturePad = 'signaturepad'\r\n}\r\nenum enInputType { Text = 'text', Color = 'color', Date = 'date', DateTime = 'datetime', Time = 'time' }\r\n\r\nenum enSelectionModeId {\r\n    Checkbox = 2, DropDownList = 3, Matrix = 4, MultiMatrix = 6, RadioButton = 1, Static = 5\r\n}\r\n\r\nenum enAnswerTypeId {\r\n    SelectionTextType = 1, SelectionOtherType = 2, FieldBasicType = 3,\r\n    XMLCountryList = 4, BooleanType = 20, FieldRequiredType = 21, FieldCalendarType = 22,\r\n    FieldLargeType = 24, FieldEmailType = 26, FieldHiddenType = 27, FieldPasswordType = 28,\r\n    SubscriberXMLList = 29, ExtendedFileUploadType = 30, ExtendedFreeTextBoxType = 31,\r\n    FieldSliderType = 56, iAspireHidden = 101, iAspireSignature = 102, iAspireEncrypted = 103,\r\n\r\n    XmlActivitiesOfDailyLiving = 109,\r\n    XmlEvaluation = 111,\r\n    XmlGradeList = 59,\r\n    XmlRelatedCompetencies = 106,\r\n    XmlShortTermObjectiveArticulation = 108,\r\n    XmlShortTermObjectiveLanguage = 110,\r\n    XmlStatus = 107,\r\n    XmlSubjectList = 60,\r\n    XmlCountryList = 4,\r\n}\r\n\r\nexport let xmlControlList = [\r\n    { AnswerTypeId: 109, xmlFile: 'ActivitiesofDailyLiving.xml', name: 'xmlactivitiesofdailyliving', title: 'XML - ActivitiesofDailyLiving' },\r\n    { AnswerTypeId: 111, xmlFile: 'Evaluation.xml', name: 'xmlevaluation', title: 'XML - Evaluation' },\r\n    { AnswerTypeId: 59, xmlFile: 'grades.xml', name: 'xmlgradelist', title: 'XML - Grade List' },\r\n    { AnswerTypeId: 106, xmlFile: 'RelatedCompetencies.xml', name: 'xmlrelatedcompetencies', title: 'XML - Related Competencies' },\r\n    { AnswerTypeId: 108, xmlFile: 'ShortTermObjectiveArticulation.xml', name: 'xmlshorttermobjectivearticulation', title: 'XML - ShortTermObjectiveArticulation' },\r\n    { AnswerTypeId: 110, xmlFile: 'ShortTermObjectiveLanguage.xml', name: 'xmlshorttermobjectivelanguage', title: 'XML - ShortTermObjectiveLanguage' },\r\n    { AnswerTypeId: 107, xmlFile: 'Status.xml', name: 'xmlstatus', title: 'XML - Status' },\r\n    { AnswerTypeId: 60, xmlFile: 'subject.xml', name: 'xmlsubjectlist', title: 'XML - Subject List' },\r\n    { AnswerTypeId: 4, xmlFile: 'countries.xml', name: 'xmlcountrylist', title: 'XML - CountryList' }\r\n];\r\n\r\nexport let preSurveyQuestionList = [\r\n    { type: 'text', title: 'Employee', name: 'employeename', placeHolder: '##EmployeeName##,##EmployeeID##', },\r\n    { type: 'text', title: 'Teacher', name: 'teachername', placeHolder: '##TeacherName##,##TeacherID##', },\r\n\r\n    { type: 'text', title: 'iAspire User', name: 'username', placeHolder: '##iAspireUserName##,##iAspireUserID##', },\r\n    //{ type:'text', title:'Site/Department/Region', name:'sitename', placeHolder:'##SiteName##,##SiteID##',},\r\n    { type: 'text', title: 'Site', name: 'sitename', placeHolder: '##SiteName##,##SiteID##', },\r\n    { type: 'text', title: 'Department', name: 'department', placeHolder: '##SiteName##,##SiteID##', },\r\n    { type: 'text', title: 'School', name: 'schoolname', placeHolder: '##SchoolName##,##SchoolID##', },\r\n    { type: 'text', title: 'Grade', name: 'gradename', placeHolder: '##GradeName##,##GradeID##', },\r\n    { type: 'text', title: 'Subject', name: 'subject', placeHolder: '##SubjectName##,##SubjectID##', },\r\n];\r\n\r\nclass clsFunction {\r\n    static getSpaceIfTextObject(TextValue: any) {\r\n        return typeof (TextValue) == 'object' ? ' ' : TextValue;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/_models/SurveyJSJsonData.ts","import { Injectable } from '@angular/core';\r\nimport { AppSettings, UrlConfig } from '../app.setting';\r\n//import { Employee } from './employee';\r\n\r\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable'; \r\n \r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map';\r\n \r\n@Injectable()\r\nexport class AuthService {\r\n    private strBaseUrl:string='';\r\n\r\n    private headers = new Headers({'Content-Type': 'application/json'});\r\n    constructor(private _http: Http) {\r\n        let urlSetting:UrlConfig = new UrlConfig(window);\r\n        this.strBaseUrl = urlSetting.API_BASE;\r\n    }\r\n  \r\n    validateAccessID(accessID:string){\r\n        const headers = new Headers();\r\n        headers.append(\"X-iA-AccessID\",undefined);\r\n        //headers.append('Access-Control-Allow-Headers', 'Content-Type');\r\n        //headers.append('Access-Control-Allow-Methods', 'GET');\r\n        //headers.append('Access-Control-Allow-Origin', '*');\r\n\r\n        return this._http.get(this.strBaseUrl + \"Users/Validate/\" + accessID ,{headers: headers})\r\n            .map(res => res.json());\r\n    }\r\n\r\n      \r\n    private extractData(res: Response) {\r\n        console.log(res);\r\n        let body = res.json();\r\n        return body.data || { };\r\n    }\r\n\r\n    private handleError(error: any): Promise<any> {\r\n        console.error('An error occurred', error); // for demo purposes only\r\n        return Promise.reject(error.message || error);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/_services/auth.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable'; \r\nimport * as X2JS from 'x2js';\r\nimport { AppSettings, UrlConfig } from '../app.setting';\r\nimport { NQuestion } from '../_models/NSurveyModel';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class NSurveyService {\r\n    private strBaseUrl:string='';\r\n\r\n    private headers = new Headers({'Content-Type': 'application/json'});\r\n    constructor(private _http: Http) {\r\n        let AccessID:string = localStorage.getItem(\"AccessID\");\r\n        AccessID = JSON.parse(AccessID)\r\n        this.headers.append(\"X-iA-AccessID\",AccessID);\r\n        \r\n        let urlSetting:UrlConfig = new UrlConfig(window);\r\n        this.strBaseUrl = urlSetting.API_BASE;\r\n    }\r\n\r\n    /**\r\n     * Get Survey XMl from Survey by SurveyID\r\n     * @param SurveyID \r\n     */\r\n    getSurveyXml(SurveyID:number){\r\n        var _x2js = new X2JS();\r\n        this.headers.append('Accept', 'application/xml');\r\n        return this._http.get(\r\n            this.strBaseUrl + \"NSurvey/SurveyXML/\" + SurveyID,\r\n            { headers: this.headers }\r\n        ).map(res => _x2js.xml2js(res.text())).toPromise();\r\n        //.map(res => JSON.parse((res.text(),'  ')))\r\n    }\r\n    \r\n    /**\r\n     * Delete Survey Question by QuestionID\r\n     * @param QuestionID \r\n     */\r\n    deleteQuestion(QuestionID:number){\r\n        return this._http.get(\r\n            this.strBaseUrl + \"NSurvey/QuestionDelete/\" + QuestionID,\r\n            { headers: this.headers }\r\n        ).toPromise();\r\n    }\r\n\r\n    /**\r\n     * Create New Question In Survey\r\n     * @param QuestionID\r\n     */\r\n    createQuestion(question: NQuestion) {\r\n        return this._http.post(\r\n            this.strBaseUrl + \"NSurvey/CreateQuestion\",\r\n            question,\r\n            { headers: this.headers }\r\n            \r\n        ).toPromise();\r\n    }\r\n\r\n    changeQuestionDisplayOrder(QuestionId:number, DisplayOrder:number) {\r\n        return this._http.get(\r\n            this.strBaseUrl + \"NSurvey/QuestionDisplayOrderChange?QuestionId=\" +QuestionId + \"&DisplayOrder=\"+DisplayOrder ,\r\n            { headers: this.headers }\r\n        ).toPromise();\r\n    }\r\n\r\n    updateQuestion(question: NQuestion) {\r\n        return this._http.post(\r\n            this.strBaseUrl + \"NSurvey/UpdateQuestion\",\r\n            question,\r\n            { headers: this.headers }\r\n            \r\n        ).toPromise();\r\n    }\r\n\r\n    getSurveyDetails(SurveyID: number) {\r\n        return this._http.get(\r\n            this.strBaseUrl + \"NSurvey/SurveyDetails/\" + SurveyID,\r\n            { headers: this.headers }\r\n        ).toPromise();\r\n    }\r\n\r\n    getSurveyTemplateCSS(SurveyID: number, LanguageCode) {\r\n        if(LanguageCode == \"\") LanguageCode = null;\r\n        return this._http.get(\r\n            this.strBaseUrl + \"NSurvey/SurveyLayout/\" + SurveyID + \"/\" + LanguageCode,\r\n            { headers: this.headers }\r\n        ).toPromise();\r\n    }\r\n    getCSSContent(SurveyID: number, FileName:string) {\r\n        return this._http.get(\r\n            this.strBaseUrl + \"NSurvey/SurveyCSSContent/\" + SurveyID + \"/\" + FileName + \"/\",\r\n            { headers: this.headers }\r\n        ).toPromise();\r\n    }\r\n    deleteSurveyCSS(SurveyID: number, FileName:string) {\r\n        return this._http.get(\r\n            this.strBaseUrl + \"NSurvey/SurveyCSSDelete/\" + SurveyID + \"/\" + FileName + \"/\",\r\n            { headers: this.headers }\r\n        ).toPromise();\r\n    }\r\n\r\n    uploadSurveyCSS(formData: FormData) {\r\n        //this.headers.set('Content-Type', 'multipart/form-data');\r\n        //this.headers.append('Accept', 'application/json');\r\n        var headers = new Headers();\r\n        const options = new RequestOptions({headers: headers});\r\n\r\n\r\n        let urlSetting:UrlConfig = new UrlConfig(window);\r\n        let url:string = urlSetting.WAP_BASE + \"AjaxWebForm.aspx\";\r\n        formData.append(\"DoAction\",\"UploadSurveyCSS\");\r\n        return this._http.post(\r\n            url, formData, options\r\n        ).toPromise();\r\n    }\r\n    saveSurveyCSS(SurveyLayout: any) {\r\n        return this._http.post(\r\n            this.strBaseUrl + \"NSurvey/SurveyCSSSave\",\r\n            SurveyLayout,\r\n            { headers: this.headers }\r\n            \r\n        ).toPromise();\r\n    }\r\n\r\n    updateSurveyDetails(SurveyDetails)\r\n    {\r\n        return this._http.post(\r\n            this.strBaseUrl + \"NSurvey/SurveyDetailsSave\",\r\n            SurveyDetails,\r\n            { headers: this.headers }\r\n        ).toPromise();\r\n        \r\n    }\r\n    \r\n    saveSurveyLayout(SurveyLayout: any) {\r\n        return this._http.post(\r\n            this.strBaseUrl + \"NSurvey/SurveyLayoutSave\",\r\n            SurveyLayout,\r\n            { headers: this.headers }\r\n            \r\n        ).toPromise();\r\n    }\r\n    /*\r\n    getLanguageList(SurveyID:string){\r\n        return this._http.get(this.strBaseUrl + \"NSurvey/Language/\" + SurveyID, {headers: this.headers})\r\n            .map(res => res.json());\r\n    }\r\n    getSurveyPageCount(SurveyID:string){\r\n        return this._http.get(this.strBaseUrl + \"NSurvey/PageCount/\" + SurveyID, {headers: this.headers})\r\n            .map((resp: Response) => resp.json());\r\n\r\n    }\r\n    */\r\n\r\n\r\n    // from https://angular.io/docs/ts/latest/guide/server-communication.html\r\n    private handleError(error: Response | any) {\r\n        // In a real world app, we might use a remote logging infrastructure\r\n        let errMsg: string;\r\n        if (error instanceof Response) {\r\n            const body = error.json() || '';\r\n            const err = body.error || JSON.stringify(body);\r\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n        } else {\r\n            errMsg = error.message ? error.message : error.toString();\r\n        }\r\n        //console.error(errMsg);\r\n        return Observable.throw(errMsg);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_services/nsurvey.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  ApiUrl:'localhost:59795/',\n  ApiPath: 'api/',\n  WapUrl:'localhost:4976/',\n  WapPath:''\n};\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 411;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir async\n// module id = 411\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import * as SurveyEditor from 'surveyjs-editor';\r\nimport * as SurveyKo from 'survey-knockout';\r\nimport * as widgets from \"surveyjs-widgets\";\r\n//import { CKEDITOR } from 'ckeditor'\r\n\r\n\r\nvar ckEditorConfig = {\r\n    // justify,font,colorbutton\r\n    extraPlugins: 'justify,font,panelbutton,colorbutton',\r\n    toolbar : [\r\n        { name: 'document', items: [ 'Source'] },\r\n        { name: 'basicstyles', items: [ 'Bold', 'Italic', 'Strike', 'Subscript', 'Superscript' ] },\r\n        { name: 'paragraph', items: [ 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock' , '-', 'NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote' ] },\r\n\t\t{ name: 'links', items: [ 'Link', 'Unlink' ] },\r\n       \r\n        { name: 'styles', items: [ 'Format', 'Font', 'FontSize' ] },\r\n        { name: 'colors', items: [ 'TextColor', 'BGColor' ] },\r\n        { name: 'insert', items: [ 'Image', 'Table', 'HorizontalRule', 'PageBreak' ] },\t\r\n        { name: 'clipboard', items: [ 'Cut', 'Copy', 'Paste', 'PasteText','-', 'Undo', 'Redo' ] },\r\n\t\t{ name: 'tools', items: [ 'Maximize', 'ShowBlocks' ] },\r\n       \r\n        \r\n        /*\r\n        { name: 'document', items: [ 'Source', '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates' ] },\r\n\t\t{ name: 'clipboard', items: [ 'Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo' ] },\r\n\t\t{ name: 'editing', items: [ 'Find', 'Replace', '-', 'SelectAll', '-', 'Scayt' ] },\r\n\t\t{ name: 'forms', items: [ 'Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton', 'HiddenField' ] },\r\n\t\t'/',\r\n\t\t{ name: 'basicstyles', items: [ 'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'CopyFormatting', 'RemoveFormat' ] },\r\n\t\t{ name: 'paragraph', items: [ 'NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl', 'Language' ] },\r\n\t\t{ name: 'links', items: [ 'Link', 'Unlink', 'Anchor' ] },\r\n\t\t{ name: 'insert', items: [ 'Image', 'Flash', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe' ] },\r\n\t\t'/',\r\n\t\t{ name: 'styles', items: [ 'Styles', 'Format', 'Font', 'FontSize' ] },\r\n\t\t{ name: 'colors', items: [ 'TextColor', 'BGColor' ] },\r\n\t\t{ name: 'tools', items: [ 'Maximize', 'ShowBlocks' ] },\r\n\t\t*/\r\n    ],\r\n    allowedContent : true,\r\n    autoParagraph : false,\r\n    enterMode: false,\r\n    //toolbarCanCollapse : true,\r\n}\r\n\r\nexport function initCkEditor(Survey) {\r\n    // UnComment if want to add in Toolbox\r\n    widgets.ckeditor(SurveyKo);\r\n    \r\n    //console.log(\"window\", window);\r\n    window[\"CKEDITOR\"].plugins.addExternal( 'justify', window.location.origin + window.location.pathname + 'assets/ck-addon/justify/', 'plugin.js' );\r\n    window[\"CKEDITOR\"].plugins.addExternal( 'panelbutton', window.location.origin + window.location.pathname + 'assets/ck-addon/panelbutton/', 'plugin.js' );\r\n    window[\"CKEDITOR\"].plugins.addExternal( 'colorbutton', window.location.origin + window.location.pathname + 'assets/ck-addon/colorbutton/', 'plugin.js' );\r\n    window[\"CKEDITOR\"].plugins.addExternal( 'font', window.location.origin + window.location.pathname + 'assets/ck-addon/font/', 'plugin.js' );\r\n    \r\n    var CkEditor_ModalEditor = {\r\n        afterRender: function (modalEditor, htmlElement) {\r\n        \r\n            var editor = window[\"CKEDITOR\"].replace(htmlElement,ckEditorConfig);\r\n            editor.config.autoParagraph = false;\r\n            editor.config.enterMode = window[\"CKEDITOR\"].ENTER_BR;\r\n            \r\n            editor.on(\"change\", function () {\r\n                modalEditor.editingValue = editor.getData();\r\n            });\r\n            editor.setData(modalEditor.editingValue);\r\n        },\r\n        destroy: function (modalEditor, htmlElement) {\r\n            var instance = window[\"CKEDITOR\"].instances[htmlElement.id];\r\n            if (instance) {\r\n                instance.removeAllListeners();\r\n                window[\"CKEDITOR\"].remove(instance);\r\n            }\r\n        }\r\n    };\r\n    \r\n    SurveyEditor.SurveyPropertyModalEditor.registerCustomWidget(\"html\", CkEditor_ModalEditor);\r\n    SurveyEditor.SurveyPropertyModalEditor.registerCustomWidget(\"text\", CkEditor_ModalEditor);\r\n\r\n    var questionDef = SurveyEditor.SurveyQuestionEditorDefinition.definition.questionbase;\r\n    //questionDef.tabs.push({name: \"title\", index: 0});\r\n    //SurveyEditor.defaultStrings.pe.tabs[\"title\"] = \"Title\";\r\n    var ind = questionDef.properties.indexOf(\"title\");\r\n    if (ind > -1) questionDef.properties.splice(ind, 1);\r\n\r\n\r\n    /*\r\n    //Modify Question Editor. Remove title from general and add it as a tab.\r\n   \r\n    var questionDef = SurveyEditor.SurveyQuestionEditorDefinition.definition.questionbase;\r\n    questionDef.tabs.push({name: \"title\", index: 1});\r\n    SurveyEditor.defaultStrings.pe.tabs[\"title\"] = \"Title\";\r\n    var ind = questionDef.properties.indexOf(\"title\");\r\n    if(ind > -1) questionDef.properties.splice(ind, 1);\r\n    \r\n    */\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_directives/SurveyWidget/ck-editor.ts","import * as SurveyEditor from 'surveyjs-editor';\r\nimport * as widgets from \"surveyjs-widgets\";\r\nimport SignaturePad from \"signature_pad\";\r\n\r\nexport function initSignaturePad(Survey) {\r\n  widgets.signaturepad(Survey);\r\n\r\n  /*\r\n  var SignaturePad_ModalEditor = {\r\n    name: \"signature_pad\",\r\n    htmlTemplate: \"<canvas class='signature'></canvas>\",\r\n    isFit : function(question) { return question[\"renderAs\"] === 'signature_pad'; },\r\n    afterRender: function(question, el) {\r\n        var elS = el.querySelector(\"canvas\");\r\n        var me = this;\r\n        me.signaturePad = new SignaturePad(elS);\r\n        me.signaturePad.penColor = \"#1ab394\";\r\n        me.signaturePad.fromDataURL(question.value);\r\n        if(question.isReadOnly) {\r\n          me.signaturePad.off();\r\n        }\r\n        me.signaturePad.onEnd = function() {\r\n          var data = me.signaturePad.toDataURL();\r\n          question.value = data;\r\n        }\r\n    },\r\n    willUnmount: function(question, el) {\r\n        this.signaturePad.off();\r\n    }\r\n  }\r\n   \r\n  Survey.CustomWidgetCollection.Instance.addCustomWidget(SignaturePad_ModalEditor);    \r\n  Survey.JsonObject.metaData.addProperty(\"text\", {name: \"renderAs\", default: \"standard\", choices: [\"standard\", \"signature_pad\"]});\r\n  */\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_directives/SurveyWidget/signature_pad.ts","import { Component, Input } from '@angular/core';\r\nimport * as Survey from 'survey-angular';\r\n\r\n@Component({\r\n    selector: 'survey',\r\n    template: `<div class=\"survey-container contentcontainer codecontainer\"><div id=\"surveyElement\"></div></div>`,\r\n})\r\nexport class SurveyFormDirectiveComponent  {\r\n    @Input() set json (value: object) {\r\n        const surveyModel = new Survey.ReactSurveyModel(value);\r\n        Survey.SurveyNG.render('surveyElement', { model: surveyModel });\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/_directives/surveyForm.directive.ts","export class SurveyJSEditorSetting {\r\n  static showJSONEditorTab: boolean = true;\r\n  static showEmbededSurveyTab: boolean = false;\r\n  static showTestSurveyTab: boolean = true;\r\n  static showPropertyGrid: boolean = false;\r\n  static showApplyButtonInEditors = false;\r\n\r\n  static generateValidJSON: boolean = true;\r\n  static showOptions: boolean = false;\r\n\r\n  static showXMLCustomQuestion: boolean = false;\r\n  static showPreSurveyQuestion: boolean = true;\r\n\r\n  static questionTypes: string[] = [\"text\", \"checkbox\", \"radiogroup\", \"dropdown\", \"comment\", \"html\", \"file\", \"radiogroup\", \"matrixdropdown\"];\r\n \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/_directives/surveyJsEditorSetting.ts","export class ActiveUser {\r\n  UserID: number;\r\n  SessionID: string;\r\n  UserName: string;\r\n  FirstName: string;\r\n  isUserAuthorized: boolean;\r\n  Email: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_models/ActiveUser.ts","import * as X2JS from 'x2js';\r\n\r\nexport class NSurveyXmlData {\r\n    survey: Survey;\r\n    //question: Question[];\r\n    //multiLanguageText:MultiLanguageText[];\r\n    //answerType: AnswerType[];\r\n    //answer:Answer[];\r\n    //answerProperty :AnswerProperty[];\r\n    \r\n    constructor(){ }\r\n    loadData(objJson:any) {\r\n       console.log(objJson);\r\n        if(objJson == undefined || objJson.NSurveyForm == undefined ) {\r\n            throw new Error('Data could not be Null');\r\n        }\r\n        else{\r\n            if(objJson.NSurveyForm.Question == undefined){\r\n                objJson.NSurveyForm.Question = [];\r\n            }\r\n            if( objJson.NSurveyForm.Answer == undefined){\r\n                objJson.NSurveyForm.Answer = [];\r\n            }\r\n            if( objJson.NSurveyForm.AnswerType == undefined){\r\n                objJson.NSurveyForm.AnswerType = [];\r\n            }\r\n            if( objJson.NSurveyForm.ChildQuestion == undefined){\r\n                objJson.NSurveyForm.ChildQuestion = [];\r\n            }\r\n\r\n            if(objJson.NSurveyForm.Question.constructor != Array)\r\n            {\r\n                let que:any = objJson.NSurveyForm.Question;\r\n                objJson.NSurveyForm.Question = [];\r\n                objJson.NSurveyForm.Question.push(que);\r\n            }\r\n            if(objJson.NSurveyForm.Answer.constructor != Array)\r\n            {\r\n                let ans:any = objJson.NSurveyForm.Answer;\r\n                objJson.NSurveyForm.Answer = [];\r\n                objJson.NSurveyForm.Answer.push(ans);\r\n            }\r\n            if(objJson.NSurveyForm.AnswerType.constructor != Array)\r\n            {\r\n                let ansType:any = objJson.NSurveyForm.AnswerType;\r\n                objJson.NSurveyForm.AnswerType = [];\r\n                objJson.NSurveyForm.AnswerType.push(ansType);\r\n            }\r\n            if(objJson.NSurveyForm.ChildQuestion.constructor != Array)\r\n            {\r\n                let child:any = objJson.NSurveyForm.ChildQuestion;\r\n                objJson.NSurveyForm.ChildQuestion = [];\r\n                objJson.NSurveyForm.ChildQuestion.push(child);\r\n            }\r\n        }\r\n        objJson = objJson.NSurveyForm;\r\n\r\n        if(objJson.Survey != undefined){ \r\n            this.survey = objJson.Survey;\r\n            if(objJson.Question.length > 0) {\r\n                this.survey.question = objJson.Question.filter(item=> item.ParentQuestionID == undefined);\r\n            }\r\n            if(objJson.MultiLanguageText != undefined){ this.survey.multiLanguageText = objJson.MultiLanguageText; }\r\n        }\r\n\r\n        if(objJson.AnswerProperty != undefined && typeof(objJson.AnswerProperty) == \"object\") {\r\n            var answer = objJson.Answer.filter(x => x._AnswerId == objJson.AnswerProperty );\r\n            //answer.answerProperty.push(ansProp);\r\n        }\r\n        else if(objJson.AnswerProperty != undefined) {\r\n            objJson.AnswerProperty.forEach( ansProp => { \r\n                var answer = objJson.Answer.filter(x => x._AnswerId == ansProp._AnswerId );\r\n                answer.answerProperty.push(ansProp);\r\n            });\r\n        }\r\n        \r\n        if(this.survey.question && this.survey.question.length > 0){\r\n            this.survey.question.forEach( question => {\r\n                var childQuestionList = objJson.ChildQuestion.filter(a=> a._ParentQuestionId == question._QuestionId);\r\n                if(childQuestionList.length > 0) {\r\n                    question.childquestions = [];\r\n                     \r\n                    childQuestionList.forEach(child => {\r\n                        child.ChildQuestionId = child.QuestionId;\r\n                        question.childquestions.push(child);\r\n                    });\r\n                }\r\n                question.answers = objJson.Answer.filter(x => x._QuestionId == question._QuestionId );\r\n                if(question.answers.length > 0) {\r\n                    question.answers.forEach(ans => {\r\n                        var _answerType =  objJson.AnswerType.filter(x => x._AnswerTypeID == ans._AnswerTypeId );\r\n                        if(_answerType != undefined || _answerType.length > 0) {\r\n                            ans.answerType = _answerType[0];\r\n                        }\r\n                    });\r\n                }\r\n                \r\n            });\r\n        }\r\n        \r\n\r\n    }\r\n}\r\n\r\nclass AnswerType {\r\n    Description: string;\r\n    TypeNameSpace: string;\r\n    TypeAssembly: string;\r\n    _AnswerTypeID: number;\r\n    _FieldWidth: number;\r\n    _FieldHeight: number;\r\n    _FieldLength: number;\r\n    _TypeMode: number;\r\n    _PublicFieldResults: boolean;\r\n    _BuiltIn: boolean;\r\n    XMLDataSource?: string;\r\n}\r\n\r\nclass Survey {\r\n    SurveyID: number;\r\n    ProgressDisplayModeId: number;\r\n    ResumeModeID: number;\r\n    Title: string;\r\n    ThankYouMessage: string;\r\n    NavigationEnabled: boolean;\r\n    Scored: boolean;\r\n    QuestionNumberingDisabled: boolean;\r\n    Activated: boolean;\r\n    Archive: boolean;\r\n    ResultsDisplayTimes: number;\r\n    SurveyDisplayTimes: number;\r\n    CreationDate: string;\r\n     \r\n    question: Question[];\r\n    multiLanguageText: MultiLanguageText[];\r\n\r\n}\r\nexport class Question {\r\n    QuestionText: string;\r\n    QuestionPipeAlias: string;\r\n    QuestionIDText: string;\r\n    HelpText: string;\r\n    Alias: string;\r\n    ShowHelpText: boolean;\r\n    OldQuestionId: number;\r\n    isSidebySide:boolean;\r\n\r\n    _QuestionId: number;\r\n    _LayoutModeId: number;\r\n    _SelectionModeId: number;\r\n    _ColumnsNumber: number;\r\n    _MinSelectionRequired: number;\r\n    _MaxSelectionAllowed: number;\r\n    _RatingEnabled: boolean;\r\n    _RandomizeAnswers: boolean;\r\n    _SurveyId: number;\r\n    _PageNumber: number;\r\n    _DisplayOrder: number;\r\n\r\n    \r\n    answers:Answer[];\r\n    childquestions:ChildQuestion[];\r\n}\r\n\r\nexport class ChildQuestion\r\n{\r\n    ChildQuestionId:number;\r\n    QuestionText:any;\r\n    _ParentQuestionId: number;\r\n}\r\nexport class Answer\r\n{\r\n\tAnswerText: string;\r\n    ImageURL: string;\r\n    DefaultText: string;\r\n    AnswerPipeAlias: string;\r\n    AnswerIdText: string;\r\n    AnswerAlias: string;\r\n    SliderRange: string;\r\n    SliderValue: number;\r\n    SliderMin: number;\r\n    SliderMax: number;\r\n    SliderAnimate: boolean;\r\n    SliderStep: number;\r\n    OldAnswerId: number;\r\n    _QuestionId: number;\r\n    _AnswerTypeId: number;\r\n    _DisplayOrder: number;\r\n    _ScorePoint: number;\r\n    _RatePart: boolean;\r\n    _Selected: boolean;\r\n    _AnswerId: number;\r\n    _Mandatory: boolean\r\n    _RegularExpressionId: number;\r\n\r\n    answerProperty :AnswerProperty[];\r\n    answerType: AnswerType;\r\n}\r\n\r\nclass AnswerProperty\r\n{\r\n    Properties:string;\r\n    _AnswerId:string;\r\n}\r\nclass MultiLanguageText\r\n{\r\n    LanguageItemId: number;\r\n    LanguageCode: string;\r\n    LanguageMessageTypeId: number;\r\n    ItemText: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_models/NSurveyXmlData.ts","import { ErrorHandler } from '@angular/core';\r\nexport class MyErrorHandler implements ErrorHandler {\r\n    handleError(error) {\r\n      // do something with the exception\r\n      console.error(error.stack);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.ErrorHandler.ts","import { Component, OnInit } from '@angular/core';\n\nimport { ActiveUser } from './_models/ActiveUser';\nimport { AuthService } from './_services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  template: '<router-outlet></router-outlet>',\n  styleUrls: [],\n})\n\nexport class AppComponent implements OnInit {\n  activeUser: ActiveUser;\n  AccessID: string;\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.activeUser = new ActiveUser();\n    this.initUser()\n  }\n  \n  initUser() {\n    //localStorage.setItem('AccessID','\\\"2cf3900e-120e-49dd-87b1-caa0efeb7d0b\\\"');\n    let accessID = localStorage.getItem(\"AccessID\");\n    if (accessID !== null) {\n      // add popup here, only fires if the accessID was saved\n      accessID = JSON.parse(accessID);\n      this.AccessID = accessID;\n      this.authService.validateAccessID(accessID).subscribe(\n          data => { \n              this.activeUser = data;\n              //console.log(\"response\",this.activeUser);\n          },\n          error => {\n            if(error.status == 401) {\n              window.location.href =\"../#/login\";\n            }\n            else{\n              console.log(\"myerror\",error);\n            }\n          },\n          () =>  {\n              //console.log(\"Finished\")\n          }\n      );\n    } else {\n      // user is not remembered, must log in\n      this.resetUser();\n      window.location.href =\"../#/login\";\n      //ManageControls(false);\n    }\n  }\n\n  resetUser() {\n    localStorage.clear();\n    sessionStorage.clear();\n    this.activeUser.isUserAuthorized = false;\n    this.activeUser.UserID = null;\n    this.AccessID = null;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport { ErrorHandler } from '@angular/core';\nimport { MyErrorHandler } from './app.ErrorHandler';\n \nimport { AppComponent } from './app.component';\nimport { SurveyFormDirectiveComponent } from './_directives/surveyForm.directive';\nimport { SurveyEditorDirectiveComponent } from './_directives/surveyEditor.directive';\nimport { SurveyEditorComponent } from './SurveyEditor/surveyeditor.component';\nimport { SurveyFormComponent } from './SurveyForm/surveyform.component';\n \nimport { routing } from './app.routing';\nimport { AuthService } from './_services/auth.service';\n \n\n//import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n//import { SimpleNotificationsModule } from 'angular2-notifications';\n\n\n@NgModule({\n  //BrowserAnimationsModule, SimpleNotificationsModule.forRoot()\n  imports: [BrowserModule, FormsModule, HttpModule, routing, ],\n  declarations: [ \n    AppComponent, SurveyFormDirectiveComponent, SurveyEditorDirectiveComponent, SurveyEditorComponent,\n    SurveyFormComponent,\n  ],\n  providers: [\n    AuthService,\n    {provide: Window, useValue: window},\n    {provide: LocationStrategy, useClass: HashLocationStrategy},\n    {provide: ErrorHandler, useClass: MyErrorHandler}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SurveyEditorComponent } from './SurveyEditor/surveyeditor.component';\r\nimport { SurveyFormComponent } from './SurveyForm/surveyform.component';\r\n\r\n\r\nconst appRoutes :Routes = [\r\n    { path: '', redirectTo:'editor/2397', pathMatch: 'full'},    \r\n    { path: 'editor/:surveyID', pathMatch: 'full', component: SurveyEditorComponent},    \r\n    { path: 'surveyform', component: SurveyFormComponent},    \r\n];  \r\n\r\nexport const routing : ModuleWithProviders = RouterModule.forRoot(appRoutes);\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routing.ts","module.exports = \"#surveyEditorContainer .editor-tabs { display: none !important; } \\r\\n#nHeader {margin-bottom: 0;border-radius: 0;border-bottom: 1px solid #f3f3f4;border-top: 0;}\\r\\n#nHeader .navbar-header {margin-left: -15px;background-color: #92e3f2;}\\r\\n#nHeader .SurveyTitle {padding: 20px 10px 10px 20px;font-size: 20px;font-weight: bold;}\\r\\n#nHeader .navbar-right .btn-success:hover {background-color:#489048; }\\r\\n#nHeader .navbar-right .btn-success:focus {background-color:#489048; }\\r\\n\\r\\n\\r\\n.col-lg-2.col-md-2.col-sm-1.col-xs-1.svd_toolbox { overflow-y: auto; height: 82vh;}\\r\\n.panel.card.svd_content { padding-top: 10px; padding-bottom: 2px; }\\r\\n\\r\\n/* LOADING CLASS */\\r\\n.loaderContainer {background-color: #ffffffe6 ;z-index: 1100;position: fixed;width: 100%;height: 100%; }\\r\\n\\r\\n/* Button Style */\\r\\n.nbtn {   border-radius: 2px;  padding: 0.6em 1em;  font-size: 1em;  line-height: 1em;  min-width: 6em; }\\r\\n.nbtn-primary {  background-color: #1ab394 !important;  border-color: #1ab394 !important; }\\r\\n.nbtn-primary:active { color: #fff;  background-color: #204d74 !important; border-color: #122b40 !important; }\\r\\n.nbtn-small {  font-size: 0.85em !important;  font-weight: bold !important; }\\r\\n\\r\\n/* Layout Modal  Style */\\r\\n.modal-ku {   width: 750px;  margin: 40px auto; }\\r\\n#modalLayout .modal-body {   padding: 0px !important; }\\r\\n\\r\\n/* TAB Style */\\r\\n.tabbable-panel {  border:1px solid #eee;  /*padding: 10px;*/ }\\r\\n.tabbable-line > .nav-tabs {   border: none;  margin: 0px;  background-color: #f9f9f9;}\\r\\n.tabbable-line > .nav-tabs > li {   margin-right: 2px;}\\r\\n.tabbable-line > .nav-tabs > li > a {   border: 0;  margin-right: 0;  color: #737373;}\\r\\n.tabbable-line > .nav-tabs > li > a > i {   color: #a6a6a6;}\\r\\n.tabbable-line > .nav-tabs > li.open, .tabbable-line > .nav-tabs > li:hover {   border-bottom: 4px solid #b8e8df;  /*border-bottom: 4px solid #fbcdcf*/}\\r\\n.tabbable-line > .nav-tabs > li.open > a, .tabbable-line > .nav-tabs > li:hover > a {   border: 0;  background: none !important;  color: #333333;}\\r\\n.tabbable-line > .nav-tabs > li.open > a > i, .tabbable-line > .nav-tabs > li:hover > a > i {   color: #a6a6a6;}\\r\\n.tabbable-line > .nav-tabs > li.open .dropdown-menu, .tabbable-line > .nav-tabs > li:hover .dropdown-menu {  margin-top: 0px;}\\r\\n.tabbable-line > .nav-tabs > li.active {  border-bottom: 4px solid #1ab394;  /*border-bottom: 4px solid #f3565d*/  position: relative;}\\r\\n.tabbable-line > .nav-tabs > li.active > a {  border: 0;  color: #333333;  background-color: #f9f9f9;}\\r\\n.tabbable-line > .nav-tabs > li.active > a > i {  color: #404040;}\\r\\n.tabbable-line > .tab-content {   margin-top: -3px;  background-color: #fff;  border: 0;  border-top: 1px solid #eee;  /* padding: 15px 0; */  padding: 25px;}\\r\\n.portlet .tabbable-line > .tab-content {  padding-bottom: 0;}\\r\\n\\r\\n \\r\\n.layoutError { color:red;font-weight: bold;}\\r\\n.layoutSuccess { color:#008000;font-weight: bold; }\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/SurveyEditor/surveyeditor.component.css\n// module id = 706\n// module chunks = 1","module.exports = \"<div *ngIf=\\\"isLoading\\\" class=\\\"loaderContainer\\\">\\r\\n    <div class=\\\"spincontainer\\\">\\r\\n        <div class=\\\"spinner\\\"></div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- <input type=\\\"button\\\" value=\\\"Test\\\" (click)=\\\"TestFunction($event)\\\"> -->\\r\\n\\r\\n<nav id=\\\"nHeader\\\" class=\\\"navbar\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <img height=\\\"60px\\\" width=\\\"227px\\\" style=\\\"margin: 5px 10px;\\\" src=\\\"assets\\\\images\\\\MainLogo.png\\\" alt=\\\"Logo\\\" />\\r\\n        </div>\\r\\n        <ul class=\\\"nav navbar-nav\\\">\\r\\n            <li class=\\\"active\\\">\\r\\n                <div class=\\\"SurveyTitle\\\">{{surveyTitle}}</div>\\r\\n            </li>\\r\\n        </ul>\\r\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n            <li style=\\\"padding: 10px;\\\">\\r\\n                <a href=\\\"{{backUrl}}\\\" class=\\\"btn btn-success nbtn nbtn-primary\\\" style=\\\"padding: 10px 15px;\\\">\\r\\n                    <i class=\\\"glyphicon glyphicon-arrow-left\\\" aria-hidden=\\\"true\\\"></i> Back to Form List</a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</nav>\\r\\n\\r\\n<!-- <div class=\\\"row\\\" style=\\\"background-color:#f3f3f4;padding: 15px;margin: 0;border: none;position: relative; margin-bottom: -57px;\\\">\\r\\n    <div class=\\\"col-lg-2 col-md-2 col-sm-1 col-xs-1 svd_toolbox\\\">&nbsp;</div>    \\r\\n    <div class=\\\"col-xs-11 svd_editors col-lg-10 col-md-10 col-sm-11\\\">\\r\\n        <span style=\\\"margin-right: 7px;\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary nbtn-small nbtn nbtn-primary\\\">Survey Preview</button>\\r\\n        </span>\\r\\n        <span style=\\\"margin-right: 7px;\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary nbtn-small nbtn nbtn-primary\\\">Layout</button>\\r\\n        </span>\\r\\n    </div>  \\r\\n</div> -->\\r\\n\\r\\n<survey-editor [json]=\\\"json\\\" (onQuestionAdded)=\\\"questionAdded($event)\\\" (onQuestionModified)=\\\"questionModified($event)\\\" (onQuestionRemoved)=\\\"questionDeleted($event)\\\"\\r\\n    (onQuestionChangeOrder)=\\\"questionOrderChanged($event)\\\" (onLayoutClick)=\\\"LayoutButton_Click($event)\\\" \\r\\n    (onSaveSurveyDetails)=\\\"saveSurveyDetails($event)\\\">\\r\\n</survey-editor>\\r\\n\\r\\n<!-- <simple-notifications [options]=\\\"options\\\"></simple-notifications> -->\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"modalLayout\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modalSurveyLabel\\\">\\r\\n    <div class=\\\"modal-dialog modal-ku\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form class=\\\"form-horizontal\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                    <h4 class=\\\"modal-title\\\" id=\\\"modalSurveyLabel\\\">Survey Layout</h4>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <div id=\\\"surveyContainerInPopup\\\">\\r\\n                        <div class=\\\"tabbable-panel\\\">\\r\\n                            <div class=\\\"tabbable-line\\\">\\r\\n                                <ul class=\\\"nav nav-tabs \\\">\\r\\n                                    <li class=\\\"active\\\">\\r\\n                                        <a href=\\\"#tab_default_1\\\" data-toggle=\\\"tab\\\">CSS Template File</a>\\r\\n                                    </li>\\r\\n                                    <li>\\r\\n                                        <a href=\\\"#tab_default_2\\\" data-toggle=\\\"tab\\\">Upload File</a>\\r\\n                                    </li>\\r\\n                                </ul>\\r\\n                                <div class=\\\"tab-content\\\">\\r\\n                                    <div class=\\\"tab-pane active\\\" id=\\\"tab_default_1\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"this.LayoutFormData.ErrorMessage.length > 0\\\">\\r\\n                                                <strong>Error! </strong> {{this.LayoutFormData.ErrorMessage}}.\\r\\n                                            </div>\\r\\n                                            <div class=\\\"alert alert-success\\\" *ngIf=\\\"this.LayoutFormData.SuccessMessage.length > 0\\\">\\r\\n                                                <strong>Success! </strong> {{this.LayoutFormData.SuccessMessage}}.\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label class=\\\"control-label col-sm-3\\\" for=\\\"email\\\">Css template File:</label>\\r\\n                                            <div class=\\\"col-sm-9\\\">\\r\\n                                                <select name=\\\"ddlLayoutCss\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"LayoutFormData.LayoutCss\\\" (ngModelChange)=\\\"onChangeCSS($event)\\\">\\r\\n                                                        <option *ngFor=\\\"let item of lstLayoutCSS\\\" [value]=\\\"item.value\\\"\\r\\n                                                        [attr.selected]=\\\"item.selected== true ? true : null\\\" >{{item.text}}</option>\\r\\n                                                </select>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\"> \\r\\n                                            <div class=\\\"col-sm-offset-3 col-sm-9\\\">\\r\\n                                                <div class=\\\"pull-right\\\">\\r\\n                                                    <button type=\\\"button\\\" class=\\\"btn btn-primary nbtn nbtn-primary\\\" (click)=\\\"EditCSS_click()\\\">Edit</button>\\r\\n                                                    <button type=\\\"button\\\" class=\\\"btn btn-primary nbtn nbtn-primary\\\" (click)=\\\"DeleteCSS_click()\\\">Delete</button>\\r\\n                                                    <button type=\\\"button\\\" class=\\\"btn btn-primary nbtn nbtn-primary\\\" (click)=\\\"DownloadCSS_click()\\\">Download</button>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\" *ngIf=\\\"LayoutFormData.isEditCss == true\\\"> \\r\\n                                            <label class=\\\"control-label col-sm-3\\\" for=\\\"email\\\">Edit CSS:</label>\\r\\n                                            <div class=\\\"col-sm-9\\\">\\r\\n                                                <textarea name=\\\"txtEditCss\\\" [(ngModel)]=\\\"LayoutFormData.EditCss\\\" cols=\\\"20\\\" rows=\\\"10\\\" class=\\\"form-control\\\"></textarea>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\"> \\r\\n                                            <div class=\\\"col-sm-offset-3 col-sm-9\\\">\\r\\n                                                <button type=\\\"button\\\" *ngIf=\\\"this.LayoutFormData.isEditCss == true\\\" class=\\\"btn btn-primary nbtn nbtn-primary\\\" (click)=\\\"SaveEditCSS_click()\\\">Update</button>\\r\\n                                                <button type=\\\"button\\\" *ngIf=\\\"this.LayoutFormData.isEditCss == true\\\" class=\\\"btn btn-default nbtn\\\" (click)=\\\"EdirCancel_click()\\\">Cancel</button>\\r\\n                                                \\r\\n                                                <button type=\\\"button\\\" *ngIf=\\\"this.LayoutFormData.isEditCss == false\\\" class=\\\"btn btn-primary nbtn nbtn-primary\\\" (click)=\\\"SaveLayout_click()\\\">Save</button>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"tab-pane\\\" id=\\\"tab_default_2\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"this.LayoutFormData.ErrorMessageUpload.length > 0\\\">\\r\\n                                                <strong>Error! </strong> {{this.LayoutFormData.ErrorMessageUpload}}.\\r\\n                                            </div>\\r\\n                                            <div class=\\\"alert alert-success\\\" *ngIf=\\\"this.LayoutFormData.SuccessUploadMessage.length > 0\\\">\\r\\n                                                <strong>Success! </strong> {{this.LayoutFormData.SuccessUploadMessage}}.\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label class=\\\"control-label col-sm-3\\\" for=\\\"pwd\\\">Select File:</label>\\r\\n                                            <div class=\\\"col-sm-9\\\">\\r\\n                                                <input #fuUploadCSS type=\\\"file\\\" name=\\\"fuCss\\\" style=\\\"width: 100%;padding: 8px 0;\\\" (change)=\\\"fileChange($event)\\\" placeholder=\\\"Upload file\\\" accept=\\\".css\\\" >\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\"> \\r\\n                                            <div class=\\\"col-sm-offset-3 col-sm-9\\\">\\r\\n                                                <button type=\\\"button\\\" class=\\\"btn btn-primary nbtn nbtn-primary\\\" (click)=\\\"Upload_click()\\\">Upload</button>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- <div class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default nbtn\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n                </div> -->\\r\\n            </form>\\r\\n \\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/SurveyEditor/surveyeditor.component.html\n// module id = 707\n// module chunks = 1"],"sourceRoot":""}